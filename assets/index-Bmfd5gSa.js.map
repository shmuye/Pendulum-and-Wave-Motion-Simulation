{"version":3,"file":"index-Bmfd5gSa.js","sources":["../../node_modules/three/examples/jsm/controls/OrbitControls.js","../../js/pendulum.js","../../js/wave.js","../../js/effect.js","../../js/utils.js","../../js/controls.js","../../js/main.js"],"sourcesContent":["import {\n\tControls,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3,\n\tPlane,\n\tRay,\n\tMathUtils\n} from 'three';\n\n// OrbitControls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: 'change' };\nconst _startEvent = { type: 'start' };\nconst _endEvent = { type: 'end' };\nconst _ray = new Ray();\nconst _plane = new Plane();\nconst _TILT_LIMIT = Math.cos( 70 * MathUtils.DEG2RAD );\n\nconst _v = new Vector3();\nconst _twoPI = 2 * Math.PI;\n\nconst _STATE = {\n\tNONE: - 1,\n\tROTATE: 0,\n\tDOLLY: 1,\n\tPAN: 2,\n\tTOUCH_ROTATE: 3,\n\tTOUCH_PAN: 4,\n\tTOUCH_DOLLY_PAN: 5,\n\tTOUCH_DOLLY_ROTATE: 6\n};\nconst _EPS = 0.000001;\n\nclass OrbitControls extends Controls {\n\n\tconstructor( object, domElement = null ) {\n\n\t\tsuper( object, domElement );\n\n\t\tthis.state = _STATE.NONE;\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\tthis.target = new Vector3();\n\n\t\t// Sets the 3D cursor (similar to Blender), from which the maxTargetRadius takes effect\n\t\tthis.cursor = new Vector3();\n\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// Limit camera target within a spherical area around the cursor\n\t\tthis.minTargetRadius = 0;\n\t\tthis.maxTargetRadius = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.05;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.panSpeed = 1.0;\n\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\t\tthis.zoomToCursor = false;\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t// Touch fingers\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t\t// for reset\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t// internals\n\n\t\tthis._lastPosition = new Vector3();\n\t\tthis._lastQuaternion = new Quaternion();\n\t\tthis._lastTargetPosition = new Vector3();\n\n\t\t// so camera.up is the orbit axis\n\t\tthis._quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\tthis._quatInverse = this._quat.clone().invert();\n\n\t\t// current position in spherical coordinates\n\t\tthis._spherical = new Spherical();\n\t\tthis._sphericalDelta = new Spherical();\n\n\t\tthis._scale = 1;\n\t\tthis._panOffset = new Vector3();\n\n\t\tthis._rotateStart = new Vector2();\n\t\tthis._rotateEnd = new Vector2();\n\t\tthis._rotateDelta = new Vector2();\n\n\t\tthis._panStart = new Vector2();\n\t\tthis._panEnd = new Vector2();\n\t\tthis._panDelta = new Vector2();\n\n\t\tthis._dollyStart = new Vector2();\n\t\tthis._dollyEnd = new Vector2();\n\t\tthis._dollyDelta = new Vector2();\n\n\t\tthis._dollyDirection = new Vector3();\n\t\tthis._mouse = new Vector2();\n\t\tthis._performCursorZoom = false;\n\n\t\tthis._pointers = [];\n\t\tthis._pointerPositions = {};\n\n\t\tthis._controlActive = false;\n\n\t\t// event listeners\n\n\t\tthis._onPointerMove = onPointerMove.bind( this );\n\t\tthis._onPointerDown = onPointerDown.bind( this );\n\t\tthis._onPointerUp = onPointerUp.bind( this );\n\t\tthis._onContextMenu = onContextMenu.bind( this );\n\t\tthis._onMouseWheel = onMouseWheel.bind( this );\n\t\tthis._onKeyDown = onKeyDown.bind( this );\n\n\t\tthis._onTouchStart = onTouchStart.bind( this );\n\t\tthis._onTouchMove = onTouchMove.bind( this );\n\n\t\tthis._onMouseDown = onMouseDown.bind( this );\n\t\tthis._onMouseMove = onMouseMove.bind( this );\n\n\t\tthis._interceptControlDown = interceptControlDown.bind( this );\n\t\tthis._interceptControlUp = interceptControlUp.bind( this );\n\n\t\t//\n\n\t\tif ( this.domElement !== null ) {\n\n\t\t\tthis.connect();\n\n\t\t}\n\n\t\tthis.update();\n\n\t}\n\n\tconnect() {\n\n\t\tthis.domElement.addEventListener( 'pointerdown', this._onPointerDown );\n\t\tthis.domElement.addEventListener( 'pointercancel', this._onPointerUp );\n\n\t\tthis.domElement.addEventListener( 'contextmenu', this._onContextMenu );\n\t\tthis.domElement.addEventListener( 'wheel', this._onMouseWheel, { passive: false } );\n\n\t\tconst document = this.domElement.getRootNode(); // offscreen canvas compatibility\n\t\tdocument.addEventListener( 'keydown', this._interceptControlDown, { passive: true, capture: true } );\n\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t}\n\n\tdisconnect() {\n\n\t\tthis.domElement.removeEventListener( 'pointerdown', this._onPointerDown );\n\t\tthis.domElement.removeEventListener( 'pointermove', this._onPointerMove );\n\t\tthis.domElement.removeEventListener( 'pointerup', this._onPointerUp );\n\t\tthis.domElement.removeEventListener( 'pointercancel', this._onPointerUp );\n\n\t\tthis.domElement.removeEventListener( 'wheel', this._onMouseWheel );\n\t\tthis.domElement.removeEventListener( 'contextmenu', this._onContextMenu );\n\n\t\tthis.stopListenToKeyEvents();\n\n\t\tconst document = this.domElement.getRootNode(); // offscreen canvas compatibility\n\t\tdocument.removeEventListener( 'keydown', this._interceptControlDown, { capture: true } );\n\n\t\tthis.domElement.style.touchAction = 'auto';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.disconnect();\n\n\t}\n\n\tgetPolarAngle() {\n\n\t\treturn this._spherical.phi;\n\n\t}\n\n\tgetAzimuthalAngle() {\n\n\t\treturn this._spherical.theta;\n\n\t}\n\n\tgetDistance() {\n\n\t\treturn this.object.position.distanceTo( this.target );\n\n\t}\n\n\tlistenToKeyEvents( domElement ) {\n\n\t\tdomElement.addEventListener( 'keydown', this._onKeyDown );\n\t\tthis._domElementKeyEvents = domElement;\n\n\t}\n\n\tstopListenToKeyEvents() {\n\n\t\tif ( this._domElementKeyEvents !== null ) {\n\n\t\t\tthis._domElementKeyEvents.removeEventListener( 'keydown', this._onKeyDown );\n\t\t\tthis._domElementKeyEvents = null;\n\n\t\t}\n\n\t}\n\n\tsaveState() {\n\n\t\tthis.target0.copy( this.target );\n\t\tthis.position0.copy( this.object.position );\n\t\tthis.zoom0 = this.object.zoom;\n\n\t}\n\n\treset() {\n\n\t\tthis.target.copy( this.target0 );\n\t\tthis.object.position.copy( this.position0 );\n\t\tthis.object.zoom = this.zoom0;\n\n\t\tthis.object.updateProjectionMatrix();\n\t\tthis.dispatchEvent( _changeEvent );\n\n\t\tthis.update();\n\n\t\tthis.state = _STATE.NONE;\n\n\t}\n\n\tupdate( deltaTime = null ) {\n\n\t\tconst position = this.object.position;\n\n\t\t_v.copy( position ).sub( this.target );\n\n\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t_v.applyQuaternion( this._quat );\n\n\t\t// angle from z-axis around y-axis\n\t\tthis._spherical.setFromVector3( _v );\n\n\t\tif ( this.autoRotate && this.state === _STATE.NONE ) {\n\n\t\t\tthis._rotateLeft( this._getAutoRotationAngle( deltaTime ) );\n\n\t\t}\n\n\t\tif ( this.enableDamping ) {\n\n\t\t\tthis._spherical.theta += this._sphericalDelta.theta * this.dampingFactor;\n\t\t\tthis._spherical.phi += this._sphericalDelta.phi * this.dampingFactor;\n\n\t\t} else {\n\n\t\t\tthis._spherical.theta += this._sphericalDelta.theta;\n\t\t\tthis._spherical.phi += this._sphericalDelta.phi;\n\n\t\t}\n\n\t\t// restrict theta to be between desired limits\n\n\t\tlet min = this.minAzimuthAngle;\n\t\tlet max = this.maxAzimuthAngle;\n\n\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\tif ( min < - Math.PI ) min += _twoPI; else if ( min > Math.PI ) min -= _twoPI;\n\n\t\t\tif ( max < - Math.PI ) max += _twoPI; else if ( max > Math.PI ) max -= _twoPI;\n\n\t\t\tif ( min <= max ) {\n\n\t\t\t\tthis._spherical.theta = Math.max( min, Math.min( max, this._spherical.theta ) );\n\n\t\t\t} else {\n\n\t\t\t\tthis._spherical.theta = ( this._spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\tMath.max( min, this._spherical.theta ) :\n\t\t\t\t\tMath.min( max, this._spherical.theta );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// restrict phi to be between desired limits\n\t\tthis._spherical.phi = Math.max( this.minPolarAngle, Math.min( this.maxPolarAngle, this._spherical.phi ) );\n\n\t\tthis._spherical.makeSafe();\n\n\n\t\t// move target to panned location\n\n\t\tif ( this.enableDamping === true ) {\n\n\t\t\tthis.target.addScaledVector( this._panOffset, this.dampingFactor );\n\n\t\t} else {\n\n\t\t\tthis.target.add( this._panOffset );\n\n\t\t}\n\n\t\t// Limit the target distance from the cursor to create a sphere around the center of interest\n\t\tthis.target.sub( this.cursor );\n\t\tthis.target.clampLength( this.minTargetRadius, this.maxTargetRadius );\n\t\tthis.target.add( this.cursor );\n\n\t\tlet zoomChanged = false;\n\t\t// adjust the camera position based on zoom only if we're not zooming to the cursor or if it's an ortho camera\n\t\t// we adjust zoom later in these cases\n\t\tif ( this.zoomToCursor && this._performCursorZoom || this.object.isOrthographicCamera ) {\n\n\t\t\tthis._spherical.radius = this._clampDistance( this._spherical.radius );\n\n\t\t} else {\n\n\t\t\tconst prevRadius = this._spherical.radius;\n\t\t\tthis._spherical.radius = this._clampDistance( this._spherical.radius * this._scale );\n\t\t\tzoomChanged = prevRadius != this._spherical.radius;\n\n\t\t}\n\n\t\t_v.setFromSpherical( this._spherical );\n\n\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t_v.applyQuaternion( this._quatInverse );\n\n\t\tposition.copy( this.target ).add( _v );\n\n\t\tthis.object.lookAt( this.target );\n\n\t\tif ( this.enableDamping === true ) {\n\n\t\t\tthis._sphericalDelta.theta *= ( 1 - this.dampingFactor );\n\t\t\tthis._sphericalDelta.phi *= ( 1 - this.dampingFactor );\n\n\t\t\tthis._panOffset.multiplyScalar( 1 - this.dampingFactor );\n\n\t\t} else {\n\n\t\t\tthis._sphericalDelta.set( 0, 0, 0 );\n\n\t\t\tthis._panOffset.set( 0, 0, 0 );\n\n\t\t}\n\n\t\t// adjust camera position\n\t\tif ( this.zoomToCursor && this._performCursorZoom ) {\n\n\t\t\tlet newRadius = null;\n\t\t\tif ( this.object.isPerspectiveCamera ) {\n\n\t\t\t\t// move the camera down the pointer ray\n\t\t\t\t// this method avoids floating point error\n\t\t\t\tconst prevRadius = _v.length();\n\t\t\t\tnewRadius = this._clampDistance( prevRadius * this._scale );\n\n\t\t\t\tconst radiusDelta = prevRadius - newRadius;\n\t\t\t\tthis.object.position.addScaledVector( this._dollyDirection, radiusDelta );\n\t\t\t\tthis.object.updateMatrixWorld();\n\n\t\t\t\tzoomChanged = !! radiusDelta;\n\n\t\t\t} else if ( this.object.isOrthographicCamera ) {\n\n\t\t\t\t// adjust the ortho camera position based on zoom changes\n\t\t\t\tconst mouseBefore = new Vector3( this._mouse.x, this._mouse.y, 0 );\n\t\t\t\tmouseBefore.unproject( this.object );\n\n\t\t\t\tconst prevZoom = this.object.zoom;\n\t\t\t\tthis.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom / this._scale ) );\n\t\t\t\tthis.object.updateProjectionMatrix();\n\n\t\t\t\tzoomChanged = prevZoom !== this.object.zoom;\n\n\t\t\t\tconst mouseAfter = new Vector3( this._mouse.x, this._mouse.y, 0 );\n\t\t\t\tmouseAfter.unproject( this.object );\n\n\t\t\t\tthis.object.position.sub( mouseAfter ).add( mouseBefore );\n\t\t\t\tthis.object.updateMatrixWorld();\n\n\t\t\t\tnewRadius = _v.length();\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled.' );\n\t\t\t\tthis.zoomToCursor = false;\n\n\t\t\t}\n\n\t\t\t// handle the placement of the target\n\t\t\tif ( newRadius !== null ) {\n\n\t\t\t\tif ( this.screenSpacePanning ) {\n\n\t\t\t\t\t// position the orbit target in front of the new camera position\n\t\t\t\t\tthis.target.set( 0, 0, - 1 )\n\t\t\t\t\t\t.transformDirection( this.object.matrix )\n\t\t\t\t\t\t.multiplyScalar( newRadius )\n\t\t\t\t\t\t.add( this.object.position );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// get the ray and translation plane to compute target\n\t\t\t\t\t_ray.origin.copy( this.object.position );\n\t\t\t\t\t_ray.direction.set( 0, 0, - 1 ).transformDirection( this.object.matrix );\n\n\t\t\t\t\t// if the camera is 20 degrees above the horizon then don't adjust the focus target to avoid\n\t\t\t\t\t// extremely large values\n\t\t\t\t\tif ( Math.abs( this.object.up.dot( _ray.direction ) ) < _TILT_LIMIT ) {\n\n\t\t\t\t\t\tthis.object.lookAt( this.target );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_plane.setFromNormalAndCoplanarPoint( this.object.up, this.target );\n\t\t\t\t\t\t_ray.intersectPlane( _plane, this.target );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( this.object.isOrthographicCamera ) {\n\n\t\t\tconst prevZoom = this.object.zoom;\n\t\t\tthis.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom / this._scale ) );\n\n\t\t\tif ( prevZoom !== this.object.zoom ) {\n\n\t\t\t\tthis.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._scale = 1;\n\t\tthis._performCursorZoom = false;\n\n\t\t// update condition is:\n\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\tif ( zoomChanged ||\n\t\t\tthis._lastPosition.distanceToSquared( this.object.position ) > _EPS ||\n\t\t\t8 * ( 1 - this._lastQuaternion.dot( this.object.quaternion ) ) > _EPS ||\n\t\t\tthis._lastTargetPosition.distanceToSquared( this.target ) > _EPS ) {\n\n\t\t\tthis.dispatchEvent( _changeEvent );\n\n\t\t\tthis._lastPosition.copy( this.object.position );\n\t\t\tthis._lastQuaternion.copy( this.object.quaternion );\n\t\t\tthis._lastTargetPosition.copy( this.target );\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t_getAutoRotationAngle( deltaTime ) {\n\n\t\tif ( deltaTime !== null ) {\n\n\t\t\treturn ( _twoPI / 60 * this.autoRotateSpeed ) * deltaTime;\n\n\t\t} else {\n\n\t\t\treturn _twoPI / 60 / 60 * this.autoRotateSpeed;\n\n\t\t}\n\n\t}\n\n\t_getZoomScale( delta ) {\n\n\t\tconst normalizedDelta = Math.abs( delta * 0.01 );\n\t\treturn Math.pow( 0.95, this.zoomSpeed * normalizedDelta );\n\n\t}\n\n\t_rotateLeft( angle ) {\n\n\t\tthis._sphericalDelta.theta -= angle;\n\n\t}\n\n\t_rotateUp( angle ) {\n\n\t\tthis._sphericalDelta.phi -= angle;\n\n\t}\n\n\t_panLeft( distance, objectMatrix ) {\n\n\t\t_v.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t_v.multiplyScalar( - distance );\n\n\t\tthis._panOffset.add( _v );\n\n\t}\n\n\t_panUp( distance, objectMatrix ) {\n\n\t\tif ( this.screenSpacePanning === true ) {\n\n\t\t\t_v.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t} else {\n\n\t\t\t_v.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t_v.crossVectors( this.object.up, _v );\n\n\t\t}\n\n\t\t_v.multiplyScalar( distance );\n\n\t\tthis._panOffset.add( _v );\n\n\t}\n\n\t// deltaX and deltaY are in pixels; right and down are positive\n\t_pan( deltaX, deltaY ) {\n\n\t\tconst element = this.domElement;\n\n\t\tif ( this.object.isPerspectiveCamera ) {\n\n\t\t\t// perspective\n\t\t\tconst position = this.object.position;\n\t\t\t_v.copy( position ).sub( this.target );\n\t\t\tlet targetDistance = _v.length();\n\n\t\t\t// half of the fov is center to top of screen\n\t\t\ttargetDistance *= Math.tan( ( this.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\tthis._panLeft( 2 * deltaX * targetDistance / element.clientHeight, this.object.matrix );\n\t\t\tthis._panUp( 2 * deltaY * targetDistance / element.clientHeight, this.object.matrix );\n\n\t\t} else if ( this.object.isOrthographicCamera ) {\n\n\t\t\t// orthographic\n\t\t\tthis._panLeft( deltaX * ( this.object.right - this.object.left ) / this.object.zoom / element.clientWidth, this.object.matrix );\n\t\t\tthis._panUp( deltaY * ( this.object.top - this.object.bottom ) / this.object.zoom / element.clientHeight, this.object.matrix );\n\n\t\t} else {\n\n\t\t\t// camera neither orthographic nor perspective\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\tthis.enablePan = false;\n\n\t\t}\n\n\t}\n\n\t_dollyOut( dollyScale ) {\n\n\t\tif ( this.object.isPerspectiveCamera || this.object.isOrthographicCamera ) {\n\n\t\t\tthis._scale /= dollyScale;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tthis.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t_dollyIn( dollyScale ) {\n\n\t\tif ( this.object.isPerspectiveCamera || this.object.isOrthographicCamera ) {\n\n\t\t\tthis._scale *= dollyScale;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tthis.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t_updateZoomParameters( x, y ) {\n\n\t\tif ( ! this.zoomToCursor ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._performCursorZoom = true;\n\n\t\tconst rect = this.domElement.getBoundingClientRect();\n\t\tconst dx = x - rect.left;\n\t\tconst dy = y - rect.top;\n\t\tconst w = rect.width;\n\t\tconst h = rect.height;\n\n\t\tthis._mouse.x = ( dx / w ) * 2 - 1;\n\t\tthis._mouse.y = - ( dy / h ) * 2 + 1;\n\n\t\tthis._dollyDirection.set( this._mouse.x, this._mouse.y, 1 ).unproject( this.object ).sub( this.object.position ).normalize();\n\n\t}\n\n\t_clampDistance( dist ) {\n\n\t\treturn Math.max( this.minDistance, Math.min( this.maxDistance, dist ) );\n\n\t}\n\n\t//\n\t// event callbacks - update the object state\n\t//\n\n\t_handleMouseDownRotate( event ) {\n\n\t\tthis._rotateStart.set( event.clientX, event.clientY );\n\n\t}\n\n\t_handleMouseDownDolly( event ) {\n\n\t\tthis._updateZoomParameters( event.clientX, event.clientX );\n\t\tthis._dollyStart.set( event.clientX, event.clientY );\n\n\t}\n\n\t_handleMouseDownPan( event ) {\n\n\t\tthis._panStart.set( event.clientX, event.clientY );\n\n\t}\n\n\t_handleMouseMoveRotate( event ) {\n\n\t\tthis._rotateEnd.set( event.clientX, event.clientY );\n\n\t\tthis._rotateDelta.subVectors( this._rotateEnd, this._rotateStart ).multiplyScalar( this.rotateSpeed );\n\n\t\tconst element = this.domElement;\n\n\t\tthis._rotateLeft( _twoPI * this._rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\tthis._rotateUp( _twoPI * this._rotateDelta.y / element.clientHeight );\n\n\t\tthis._rotateStart.copy( this._rotateEnd );\n\n\t\tthis.update();\n\n\t}\n\n\t_handleMouseMoveDolly( event ) {\n\n\t\tthis._dollyEnd.set( event.clientX, event.clientY );\n\n\t\tthis._dollyDelta.subVectors( this._dollyEnd, this._dollyStart );\n\n\t\tif ( this._dollyDelta.y > 0 ) {\n\n\t\t\tthis._dollyOut( this._getZoomScale( this._dollyDelta.y ) );\n\n\t\t} else if ( this._dollyDelta.y < 0 ) {\n\n\t\t\tthis._dollyIn( this._getZoomScale( this._dollyDelta.y ) );\n\n\t\t}\n\n\t\tthis._dollyStart.copy( this._dollyEnd );\n\n\t\tthis.update();\n\n\t}\n\n\t_handleMouseMovePan( event ) {\n\n\t\tthis._panEnd.set( event.clientX, event.clientY );\n\n\t\tthis._panDelta.subVectors( this._panEnd, this._panStart ).multiplyScalar( this.panSpeed );\n\n\t\tthis._pan( this._panDelta.x, this._panDelta.y );\n\n\t\tthis._panStart.copy( this._panEnd );\n\n\t\tthis.update();\n\n\t}\n\n\t_handleMouseWheel( event ) {\n\n\t\tthis._updateZoomParameters( event.clientX, event.clientY );\n\n\t\tif ( event.deltaY < 0 ) {\n\n\t\t\tthis._dollyIn( this._getZoomScale( event.deltaY ) );\n\n\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\tthis._dollyOut( this._getZoomScale( event.deltaY ) );\n\n\t\t}\n\n\t\tthis.update();\n\n\t}\n\n\t_handleKeyDown( event ) {\n\n\t\tlet needsUpdate = false;\n\n\t\tswitch ( event.code ) {\n\n\t\t\tcase this.keys.UP:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tthis._rotateUp( _twoPI * this.rotateSpeed / this.domElement.clientHeight );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._pan( 0, this.keyPanSpeed );\n\n\t\t\t\t}\n\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase this.keys.BOTTOM:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tthis._rotateUp( - _twoPI * this.rotateSpeed / this.domElement.clientHeight );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._pan( 0, - this.keyPanSpeed );\n\n\t\t\t\t}\n\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase this.keys.LEFT:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tthis._rotateLeft( _twoPI * this.rotateSpeed / this.domElement.clientHeight );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._pan( this.keyPanSpeed, 0 );\n\n\t\t\t\t}\n\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase this.keys.RIGHT:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tthis._rotateLeft( - _twoPI * this.rotateSpeed / this.domElement.clientHeight );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._pan( - this.keyPanSpeed, 0 );\n\n\t\t\t\t}\n\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\tevent.preventDefault();\n\n\t\t\tthis.update();\n\n\t\t}\n\n\n\t}\n\n\t_handleTouchStartRotate( event ) {\n\n\t\tif ( this._pointers.length === 1 ) {\n\n\t\t\tthis._rotateStart.set( event.pageX, event.pageY );\n\n\t\t} else {\n\n\t\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\tthis._rotateStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\t_handleTouchStartPan( event ) {\n\n\t\tif ( this._pointers.length === 1 ) {\n\n\t\t\tthis._panStart.set( event.pageX, event.pageY );\n\n\t\t} else {\n\n\t\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\tthis._panStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\t_handleTouchStartDolly( event ) {\n\n\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\tconst dx = event.pageX - position.x;\n\t\tconst dy = event.pageY - position.y;\n\n\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tthis._dollyStart.set( 0, distance );\n\n\t}\n\n\t_handleTouchStartDollyPan( event ) {\n\n\t\tif ( this.enableZoom ) this._handleTouchStartDolly( event );\n\n\t\tif ( this.enablePan ) this._handleTouchStartPan( event );\n\n\t}\n\n\t_handleTouchStartDollyRotate( event ) {\n\n\t\tif ( this.enableZoom ) this._handleTouchStartDolly( event );\n\n\t\tif ( this.enableRotate ) this._handleTouchStartRotate( event );\n\n\t}\n\n\t_handleTouchMoveRotate( event ) {\n\n\t\tif ( this._pointers.length == 1 ) {\n\n\t\t\tthis._rotateEnd.set( event.pageX, event.pageY );\n\n\t\t} else {\n\n\t\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\tthis._rotateEnd.set( x, y );\n\n\t\t}\n\n\t\tthis._rotateDelta.subVectors( this._rotateEnd, this._rotateStart ).multiplyScalar( this.rotateSpeed );\n\n\t\tconst element = this.domElement;\n\n\t\tthis._rotateLeft( _twoPI * this._rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\tthis._rotateUp( _twoPI * this._rotateDelta.y / element.clientHeight );\n\n\t\tthis._rotateStart.copy( this._rotateEnd );\n\n\t}\n\n\t_handleTouchMovePan( event ) {\n\n\t\tif ( this._pointers.length === 1 ) {\n\n\t\t\tthis._panEnd.set( event.pageX, event.pageY );\n\n\t\t} else {\n\n\t\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\tthis._panEnd.set( x, y );\n\n\t\t}\n\n\t\tthis._panDelta.subVectors( this._panEnd, this._panStart ).multiplyScalar( this.panSpeed );\n\n\t\tthis._pan( this._panDelta.x, this._panDelta.y );\n\n\t\tthis._panStart.copy( this._panEnd );\n\n\t}\n\n\t_handleTouchMoveDolly( event ) {\n\n\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\tconst dx = event.pageX - position.x;\n\t\tconst dy = event.pageY - position.y;\n\n\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tthis._dollyEnd.set( 0, distance );\n\n\t\tthis._dollyDelta.set( 0, Math.pow( this._dollyEnd.y / this._dollyStart.y, this.zoomSpeed ) );\n\n\t\tthis._dollyOut( this._dollyDelta.y );\n\n\t\tthis._dollyStart.copy( this._dollyEnd );\n\n\t\tconst centerX = ( event.pageX + position.x ) * 0.5;\n\t\tconst centerY = ( event.pageY + position.y ) * 0.5;\n\n\t\tthis._updateZoomParameters( centerX, centerY );\n\n\t}\n\n\t_handleTouchMoveDollyPan( event ) {\n\n\t\tif ( this.enableZoom ) this._handleTouchMoveDolly( event );\n\n\t\tif ( this.enablePan ) this._handleTouchMovePan( event );\n\n\t}\n\n\t_handleTouchMoveDollyRotate( event ) {\n\n\t\tif ( this.enableZoom ) this._handleTouchMoveDolly( event );\n\n\t\tif ( this.enableRotate ) this._handleTouchMoveRotate( event );\n\n\t}\n\n\t// pointers\n\n\t_addPointer( event ) {\n\n\t\tthis._pointers.push( event.pointerId );\n\n\t}\n\n\t_removePointer( event ) {\n\n\t\tdelete this._pointerPositions[ event.pointerId ];\n\n\t\tfor ( let i = 0; i < this._pointers.length; i ++ ) {\n\n\t\t\tif ( this._pointers[ i ] == event.pointerId ) {\n\n\t\t\t\tthis._pointers.splice( i, 1 );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_isTrackingPointer( event ) {\n\n\t\tfor ( let i = 0; i < this._pointers.length; i ++ ) {\n\n\t\t\tif ( this._pointers[ i ] == event.pointerId ) return true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t_trackPointer( event ) {\n\n\t\tlet position = this._pointerPositions[ event.pointerId ];\n\n\t\tif ( position === undefined ) {\n\n\t\t\tposition = new Vector2();\n\t\t\tthis._pointerPositions[ event.pointerId ] = position;\n\n\t\t}\n\n\t\tposition.set( event.pageX, event.pageY );\n\n\t}\n\n\t_getSecondPointerPosition( event ) {\n\n\t\tconst pointerId = ( event.pointerId === this._pointers[ 0 ] ) ? this._pointers[ 1 ] : this._pointers[ 0 ];\n\n\t\treturn this._pointerPositions[ pointerId ];\n\n\t}\n\n\t//\n\n\t_customWheelEvent( event ) {\n\n\t\tconst mode = event.deltaMode;\n\n\t\t// minimal wheel event altered to meet delta-zoom demand\n\t\tconst newEvent = {\n\t\t\tclientX: event.clientX,\n\t\t\tclientY: event.clientY,\n\t\t\tdeltaY: event.deltaY,\n\t\t};\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase 1: // LINE_MODE\n\t\t\t\tnewEvent.deltaY *= 16;\n\t\t\t\tbreak;\n\n\t\t\tcase 2: // PAGE_MODE\n\t\t\t\tnewEvent.deltaY *= 100;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\t// detect if event was triggered by pinching\n\t\tif ( event.ctrlKey && ! this._controlActive ) {\n\n\t\t\tnewEvent.deltaY *= 10;\n\n\t\t}\n\n\t\treturn newEvent;\n\n\t}\n\n}\n\nfunction onPointerDown( event ) {\n\n\tif ( this.enabled === false ) return;\n\n\tif ( this._pointers.length === 0 ) {\n\n\t\tthis.domElement.setPointerCapture( event.pointerId );\n\n\t\tthis.domElement.addEventListener( 'pointermove', this._onPointerMove );\n\t\tthis.domElement.addEventListener( 'pointerup', this._onPointerUp );\n\n\t}\n\n\t//\n\n\tif ( this._isTrackingPointer( event ) ) return;\n\n\t//\n\n\tthis._addPointer( event );\n\n\tif ( event.pointerType === 'touch' ) {\n\n\t\tthis._onTouchStart( event );\n\n\t} else {\n\n\t\tthis._onMouseDown( event );\n\n\t}\n\n}\n\nfunction onPointerMove( event ) {\n\n\tif ( this.enabled === false ) return;\n\n\tif ( event.pointerType === 'touch' ) {\n\n\t\tthis._onTouchMove( event );\n\n\t} else {\n\n\t\tthis._onMouseMove( event );\n\n\t}\n\n}\n\nfunction onPointerUp( event ) {\n\n\tthis._removePointer( event );\n\n\tswitch ( this._pointers.length ) {\n\n\t\tcase 0:\n\n\t\t\tthis.domElement.releasePointerCapture( event.pointerId );\n\n\t\t\tthis.domElement.removeEventListener( 'pointermove', this._onPointerMove );\n\t\t\tthis.domElement.removeEventListener( 'pointerup', this._onPointerUp );\n\n\t\t\tthis.dispatchEvent( _endEvent );\n\n\t\t\tthis.state = _STATE.NONE;\n\n\t\t\tbreak;\n\n\t\tcase 1:\n\n\t\t\tconst pointerId = this._pointers[ 0 ];\n\t\t\tconst position = this._pointerPositions[ pointerId ];\n\n\t\t\t// minimal placeholder event - allows state correction on pointer-up\n\t\t\tthis._onTouchStart( { pointerId: pointerId, pageX: position.x, pageY: position.y } );\n\n\t\t\tbreak;\n\n\t}\n\n}\n\nfunction onMouseDown( event ) {\n\n\tlet mouseAction;\n\n\tswitch ( event.button ) {\n\n\t\tcase 0:\n\n\t\t\tmouseAction = this.mouseButtons.LEFT;\n\t\t\tbreak;\n\n\t\tcase 1:\n\n\t\t\tmouseAction = this.mouseButtons.MIDDLE;\n\t\t\tbreak;\n\n\t\tcase 2:\n\n\t\t\tmouseAction = this.mouseButtons.RIGHT;\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tmouseAction = - 1;\n\n\t}\n\n\tswitch ( mouseAction ) {\n\n\t\tcase MOUSE.DOLLY:\n\n\t\t\tif ( this.enableZoom === false ) return;\n\n\t\t\tthis._handleMouseDownDolly( event );\n\n\t\t\tthis.state = _STATE.DOLLY;\n\n\t\t\tbreak;\n\n\t\tcase MOUSE.ROTATE:\n\n\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\t\tthis._handleMouseDownPan( event );\n\n\t\t\t\tthis.state = _STATE.PAN;\n\n\t\t\t} else {\n\n\t\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\t\tthis._handleMouseDownRotate( event );\n\n\t\t\t\tthis.state = _STATE.ROTATE;\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tcase MOUSE.PAN:\n\n\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\t\tthis._handleMouseDownRotate( event );\n\n\t\t\t\tthis.state = _STATE.ROTATE;\n\n\t\t\t} else {\n\n\t\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\t\tthis._handleMouseDownPan( event );\n\n\t\t\t\tthis.state = _STATE.PAN;\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tthis.state = _STATE.NONE;\n\n\t}\n\n\tif ( this.state !== _STATE.NONE ) {\n\n\t\tthis.dispatchEvent( _startEvent );\n\n\t}\n\n}\n\nfunction onMouseMove( event ) {\n\n\tswitch ( this.state ) {\n\n\t\tcase _STATE.ROTATE:\n\n\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\tthis._handleMouseMoveRotate( event );\n\n\t\t\tbreak;\n\n\t\tcase _STATE.DOLLY:\n\n\t\t\tif ( this.enableZoom === false ) return;\n\n\t\t\tthis._handleMouseMoveDolly( event );\n\n\t\t\tbreak;\n\n\t\tcase _STATE.PAN:\n\n\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\tthis._handleMouseMovePan( event );\n\n\t\t\tbreak;\n\n\t}\n\n}\n\nfunction onMouseWheel( event ) {\n\n\tif ( this.enabled === false || this.enableZoom === false || this.state !== _STATE.NONE ) return;\n\n\tevent.preventDefault();\n\n\tthis.dispatchEvent( _startEvent );\n\n\tthis._handleMouseWheel( this._customWheelEvent( event ) );\n\n\tthis.dispatchEvent( _endEvent );\n\n}\n\nfunction onKeyDown( event ) {\n\n\tif ( this.enabled === false || this.enablePan === false ) return;\n\n\tthis._handleKeyDown( event );\n\n}\n\nfunction onTouchStart( event ) {\n\n\tthis._trackPointer( event );\n\n\tswitch ( this._pointers.length ) {\n\n\t\tcase 1:\n\n\t\t\tswitch ( this.touches.ONE ) {\n\n\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\t\t\tthis._handleTouchStartRotate( event );\n\n\t\t\t\t\tthis.state = _STATE.TOUCH_ROTATE;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\t\t\tthis._handleTouchStartPan( event );\n\n\t\t\t\t\tthis.state = _STATE.TOUCH_PAN;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tthis.state = _STATE.NONE;\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tcase 2:\n\n\t\t\tswitch ( this.touches.TWO ) {\n\n\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\tif ( this.enableZoom === false && this.enablePan === false ) return;\n\n\t\t\t\t\tthis._handleTouchStartDollyPan( event );\n\n\t\t\t\t\tthis.state = _STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\tif ( this.enableZoom === false && this.enableRotate === false ) return;\n\n\t\t\t\t\tthis._handleTouchStartDollyRotate( event );\n\n\t\t\t\t\tthis.state = _STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tthis.state = _STATE.NONE;\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tthis.state = _STATE.NONE;\n\n\t}\n\n\tif ( this.state !== _STATE.NONE ) {\n\n\t\tthis.dispatchEvent( _startEvent );\n\n\t}\n\n}\n\nfunction onTouchMove( event ) {\n\n\tthis._trackPointer( event );\n\n\tswitch ( this.state ) {\n\n\t\tcase _STATE.TOUCH_ROTATE:\n\n\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\tthis._handleTouchMoveRotate( event );\n\n\t\t\tthis.update();\n\n\t\t\tbreak;\n\n\t\tcase _STATE.TOUCH_PAN:\n\n\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\tthis._handleTouchMovePan( event );\n\n\t\t\tthis.update();\n\n\t\t\tbreak;\n\n\t\tcase _STATE.TOUCH_DOLLY_PAN:\n\n\t\t\tif ( this.enableZoom === false && this.enablePan === false ) return;\n\n\t\t\tthis._handleTouchMoveDollyPan( event );\n\n\t\t\tthis.update();\n\n\t\t\tbreak;\n\n\t\tcase _STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\tif ( this.enableZoom === false && this.enableRotate === false ) return;\n\n\t\t\tthis._handleTouchMoveDollyRotate( event );\n\n\t\t\tthis.update();\n\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tthis.state = _STATE.NONE;\n\n\t}\n\n}\n\nfunction onContextMenu( event ) {\n\n\tif ( this.enabled === false ) return;\n\n\tevent.preventDefault();\n\n}\n\nfunction interceptControlDown( event ) {\n\n\tif ( event.key === 'Control' ) {\n\n\t\tthis._controlActive = true;\n\n\t\tconst document = this.domElement.getRootNode(); // offscreen canvas compatibility\n\n\t\tdocument.addEventListener( 'keyup', this._interceptControlUp, { passive: true, capture: true } );\n\n\t}\n\n}\n\nfunction interceptControlUp( event ) {\n\n\tif ( event.key === 'Control' ) {\n\n\t\tthis._controlActive = false;\n\n\t\tconst document = this.domElement.getRootNode(); // offscreen canvas compatibility\n\n\t\tdocument.removeEventListener( 'keyup', this._interceptControlUp, { passive: true, capture: true } );\n\n\t}\n\n}\n\nexport { OrbitControls };\n","import * as THREE from \"three\"\r\nexport class Pendulum {\r\n    constructor(scene, config) {\r\n        this.scene = scene\r\n        this.pivotX = config.x\r\n        this.pivotY = config.y || 4\r\n        this.pivotZ = config.z || 0\r\n        this.length = config.length\r\n        this.mass = config.mass\r\n        this.color = config.color\r\n\r\n        this.angle = Math.PI / 6\r\n        this.angularVelocity = 0\r\n        this.gravity = 9.81\r\n        this.damping = 0.999\r\n\r\n        this.time = 0\r\n        this.glowIntensity = 0\r\n\r\n        this.group = new THREE.Group()\r\n        this.pivot = null\r\n        this.rod = null\r\n        this.bob = null\r\n        this.glowSphere = null\r\n\r\n        this.createComponents()\r\n        this.scene.add(this.group)\r\n    }\r\n\r\n\r\n    createComponents() {\r\n        // Pivot point\r\n        const pivotGeometry = new THREE.SphereGeometry(0.05, 16, 16)\r\n        const pivotMaterial = new THREE.MeshPhongMaterial({\r\n            color: 0x333333,\r\n            shininess: 100,\r\n        })\r\n        this.pivot = new THREE.Mesh(pivotGeometry, pivotMaterial)\r\n        this.pivot.position.set(this.pivotX, this.pivotY, this.pivotZ)\r\n        this.pivot.castShadow = true\r\n        this.group.add(this.pivot)\r\n\r\n        // Rod with metallic look\r\n        const rodGeometry = new THREE.CylinderGeometry(0.02, 0.02, this.length, 8)\r\n        const rodMaterial = new THREE.MeshPhongMaterial({\r\n            color: 0x8b4513,\r\n            shininess: 50,\r\n            specular: 0x444444,\r\n        })\r\n        this.rod = new THREE.Mesh(rodGeometry, rodMaterial)\r\n        this.rod.castShadow = true\r\n        this.group.add(this.rod)\r\n\r\n        // Bob with enhanced materials\r\n        const bobRadius = 0.1 + (this.mass - 0.5) * 0.05\r\n        const bobGeometry = new THREE.SphereGeometry(bobRadius, 32, 32)\r\n        const bobMaterial = new THREE.MeshPhongMaterial({\r\n            color: this.color,\r\n            shininess: 100,\r\n            specular: 0x444444,\r\n            emissive: new THREE.Color(this.color).multiplyScalar(0.1),\r\n        })\r\n        this.bob = new THREE.Mesh(bobGeometry, bobMaterial)\r\n        this.bob.userData = { pendulum: this }\r\n        this.bob.castShadow = true\r\n        this.group.add(this.bob)\r\n\r\n        // Glow sphere for energy visualization\r\n        const glowGeometry = new THREE.SphereGeometry(bobRadius * 1.5, 16, 16)\r\n        const glowMaterial = new THREE.MeshBasicMaterial({\r\n            color: this.color,\r\n            transparent: true,\r\n            opacity: 0,\r\n            blending: THREE.AdditiveBlending,\r\n        })\r\n        this.glowSphere = new THREE.Mesh(glowGeometry, glowMaterial)\r\n        this.bob.add(this.glowSphere)\r\n\r\n        this.updatePosition()\r\n    }\r\n\r\n    /**\r\n     * Update position with smooth animations\r\n     */\r\n    updatePosition() {\r\n        const bobX = this.pivotX + Math.sin(this.angle) * this.length\r\n        const bobY = this.pivotY - Math.cos(this.angle) * this.length\r\n\r\n        // Smooth bob movement\r\n        this.bob.position.set(bobX, bobY, this.pivotZ)\r\n\r\n        // Rod positioning and rotation\r\n        this.rod.position.set(\r\n            this.pivotX + (Math.sin(this.angle) * this.length) / 2,\r\n            this.pivotY - (Math.cos(this.angle) * this.length) / 2,\r\n            this.pivotZ,\r\n        )\r\n        this.rod.rotation.z = this.angle\r\n\r\n        // Add subtle bob rotation\r\n        this.bob.rotation.y += 0.01\r\n    }\r\n\r\n    /**\r\n     * Update physics with enhanced animations\r\n     */\r\n    update(deltaTime) {\r\n        this.time += deltaTime\r\n\r\n        // Physics calculation\r\n        const angularAcceleration = -(this.gravity / this.length) * Math.sin(this.angle)\r\n        this.angularVelocity += angularAcceleration * deltaTime\r\n        this.angularVelocity *= this.damping\r\n        this.angle += this.angularVelocity * deltaTime\r\n\r\n        // Update glow based on velocity\r\n        const velocity = Math.abs(this.angularVelocity)\r\n        this.glowIntensity = velocity * 0.3\r\n\r\n        // Animate emissive color\r\n        const emissiveIntensity = 0.1 + this.glowIntensity * 0.2\r\n        this.bob.material.emissive.copy(new THREE.Color(this.color)).multiplyScalar(emissiveIntensity)\r\n\r\n        // Update glow sphere\r\n        this.glowSphere.material.opacity = this.glowIntensity * 0.3\r\n        this.glowSphere.scale.setScalar(1 + Math.sin(this.time * 5) * 0.1)\r\n\r\n        // Add subtle bob pulsing\r\n        const pulseScale = 1 + Math.sin(this.time * 3) * 0.05\r\n        this.bob.scale.setScalar(pulseScale)\r\n\r\n        this.updatePosition()\r\n    }\r\n\r\n    /**\r\n     * Set angle from world position (for dragging)\r\n     */\r\n    setAngleFromPosition(worldPosition) {\r\n        const dx = worldPosition.x - this.pivotX\r\n        const dy = worldPosition.y - this.pivotY\r\n        if (Math.sqrt(dx * dx + dy * dy) > 0) {\r\n            this.angle = Math.atan2(dx, -dy)\r\n            this.angularVelocity = 0\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reset with animation\r\n     */\r\n    reset() {\r\n        this.angle = Math.PI / 6\r\n        this.angularVelocity = 0\r\n        this.glowIntensity = 0\r\n        this.updatePosition()\r\n    }\r\n\r\n    /**\r\n     * Update properties with smooth transition\r\n     */\r\n    updateProperties(length, mass) {\r\n        this.length = length\r\n        this.mass = mass\r\n        this.createComponents()\r\n    }\r\n\r\n    /**\r\n     * Get bob for interaction\r\n     */\r\n    getBob() {\r\n        return this.bob\r\n    }\r\n\r\n    /**\r\n     * Get energy for visualization\r\n     */\r\n    getEnergy() {\r\n        const height = this.pivotY - this.bob.position.y\r\n        const velocity = this.angularVelocity * this.length\r\n        return 0.5 * this.mass * velocity * velocity + this.mass * this.gravity * height\r\n    }\r\n\r\n    /**\r\n     * Dispose resources\r\n     */\r\n    dispose() {\r\n        this.scene.remove(this.group)\r\n        this.group.traverse((child) => {\r\n            if (child.geometry) child.geometry.dispose()\r\n            if (child.material) child.material.dispose()\r\n        })\r\n    }\r\n}","import * as THREE from \"three\"\r\n\r\n/**\r\n * Enhanced Wave Simulation with beautiful animations\r\n */\r\nexport class WaveSimulation {\r\n    constructor(scene, config = {}) {\r\n        this.scene = scene\r\n        this.params = {\r\n            amplitude: config.amplitude || 0.5,\r\n            frequency: config.frequency || 1.0,\r\n            speed: config.speed || 1.0,\r\n            time: 0,\r\n        }\r\n\r\n        this.waveWidth = config.width || 10\r\n        this.waveHeight = config.height || 6\r\n        this.waveSegments = config.segments || 40\r\n        this.position = config.position || { x: -5, y: -2, z: 0 }\r\n\r\n        this.geometry = null\r\n        this.material = null\r\n        this.mesh = null\r\n        this.originalPositions = null\r\n\r\n        // Animation properties\r\n        this.colorTime = 0\r\n        this.wavePhases = []\r\n\r\n        this.createWave()\r\n    }\r\n\r\n    /**\r\n     * Create enhanced wave surface\r\n     */\r\n    createWave() {\r\n        this.geometry = new THREE.PlaneGeometry(this.waveWidth, this.waveHeight, this.waveSegments, this.waveSegments)\r\n\r\n        // Enhanced water material with better visuals\r\n        this.material = new THREE.MeshPhongMaterial({\r\n            color: 0x006994,\r\n            transparent: true,\r\n            opacity: 0.8,\r\n            shininess: 100,\r\n            specular: 0x222222,\r\n            reflectivity: 0.3,\r\n        })\r\n\r\n        this.mesh = new THREE.Mesh(this.geometry, this.material)\r\n        this.mesh.rotation.x = -Math.PI / 2\r\n        this.mesh.position.set(this.position.x, this.position.y, this.position.z)\r\n        this.mesh.receiveShadow = true\r\n        this.scene.add(this.mesh)\r\n\r\n        const positions = this.geometry.attributes.position.array\r\n        this.originalPositions = new Float32Array(positions)\r\n\r\n        // Initialize wave phases for more complex animation\r\n        for (let i = 0; i < 4; i++) {\r\n            this.wavePhases.push({\r\n                frequency: 0.5 + Math.random() * 2,\r\n                amplitude: 0.3 + Math.random() * 0.7,\r\n                speed: 0.8 + Math.random() * 1.4,\r\n                offset: Math.random() * Math.PI * 2,\r\n            })\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Update wave with enhanced animations\r\n     */\r\n    update(deltaTime) {\r\n        this.params.time += deltaTime * this.params.speed\r\n        this.colorTime += deltaTime\r\n\r\n        const positions = this.geometry.attributes.position.array\r\n\r\n        // Create complex wave patterns\r\n        for (let i = 0; i < positions.length; i += 3) {\r\n            const x = this.originalPositions[i]\r\n            const y = this.originalPositions[i + 1]\r\n\r\n            let height = 0\r\n\r\n            // Combine multiple wave functions for realistic water\r\n            this.wavePhases.forEach((phase, index) => {\r\n                const waveX = Math.sin(\r\n                    x * this.params.frequency * phase.frequency + this.params.time * phase.speed + phase.offset,\r\n                )\r\n                const waveY = Math.sin(\r\n                    y * this.params.frequency * phase.frequency * 0.7 + this.params.time * phase.speed * 1.3 + phase.offset,\r\n                )\r\n                const waveXY = Math.sin(\r\n                    (x + y) * this.params.frequency * phase.frequency * 0.5 + this.params.time * phase.speed * 0.8 + phase.offset,\r\n                )\r\n\r\n                height += (waveX + waveY * 0.5 + waveXY * 0.3) * this.params.amplitude * phase.amplitude * 0.25\r\n            })\r\n\r\n            positions[i + 2] = height\r\n        }\r\n\r\n        this.geometry.attributes.position.needsUpdate = true\r\n        this.geometry.computeVertexNormals()\r\n\r\n        // Animate colors with multiple hues\r\n        const hue1 = 0.6 + Math.sin(this.colorTime * 0.5) * 0.1\r\n        const hue2 = 0.55 + Math.cos(this.colorTime * 0.3) * 0.05\r\n        const finalHue = (hue1 + hue2) / 2\r\n\r\n        this.material.color.setHSL(finalHue, 0.8, 0.4)\r\n\r\n        // Animate opacity for breathing effect\r\n        this.material.opacity = 0.7 + Math.sin(this.colorTime * 2) * 0.1\r\n    }\r\n\r\n    /**\r\n     * Update parameters\r\n     */\r\n    updateParameters(newParams) {\r\n        Object.assign(this.params, newParams)\r\n    }\r\n\r\n    /**\r\n     * Get parameters\r\n     */\r\n    getParameters() {\r\n        return {...this.params }\r\n    }\r\n\r\n    /**\r\n     * Get wave height at position (for interactions)\r\n     */\r\n    getHeightAt(x, y) {\r\n        let height = 0\r\n        this.wavePhases.forEach((phase) => {\r\n            const waveX = Math.sin(\r\n                x * this.params.frequency * phase.frequency + this.params.time * phase.speed + phase.offset,\r\n            )\r\n            const waveY = Math.sin(\r\n                y * this.params.frequency * phase.frequency * 0.7 + this.params.time * phase.speed * 1.3 + phase.offset,\r\n            )\r\n            height += waveX * this.params.amplitude * phase.amplitude * 0.25\r\n        })\r\n        return height\r\n    }\r\n\r\n    /**\r\n     * Dispose resources\r\n     */\r\n    dispose() {\r\n        this.scene.remove(this.mesh)\r\n        this.geometry.dispose()\r\n        this.material.dispose()\r\n    }\r\n}","import * as THREE from \"three\"\r\n\r\n/**\r\n * Enhanced Effects System with beautiful animations\r\n */\r\nexport class EffectsSystem {\r\n    constructor(scene) {\r\n        this.scene = scene\r\n        this.effects = []\r\n        this.trails = []\r\n        this.time = 0\r\n\r\n        this.createFloatingParticles()\r\n        this.createEnergyRings()\r\n    }\r\n\r\n    /**\r\n     * Create floating ambient particles\r\n     */\r\n    createFloatingParticles() {\r\n        const particleCount = 150\r\n        const geometry = new THREE.BufferGeometry()\r\n        const positions = new Float32Array(particleCount * 3)\r\n        const colors = new Float32Array(particleCount * 3)\r\n        const sizes = new Float32Array(particleCount)\r\n\r\n        for (let i = 0; i < particleCount; i++) {\r\n            const i3 = i * 3\r\n\r\n            // Distribute particles in a nice pattern\r\n            positions[i3] = (Math.random() - 0.5) * 25\r\n            positions[i3 + 1] = Math.random() * 12 + 1\r\n            positions[i3 + 2] = (Math.random() - 0.5) * 15\r\n\r\n            // Beautiful color palette\r\n            const hue = 0.5 + Math.random() * 0.4\r\n            const color = new THREE.Color().setHSL(hue, 0.8, 0.6)\r\n            colors[i3] = color.r\r\n            colors[i3 + 1] = color.g\r\n            colors[i3 + 2] = color.b\r\n\r\n            sizes[i] = Math.random() * 0.15 + 0.05\r\n        }\r\n\r\n        geometry.setAttribute(\"position\", new THREE.BufferAttribute(positions, 3))\r\n        geometry.setAttribute(\"color\", new THREE.BufferAttribute(colors, 3))\r\n        geometry.setAttribute(\"size\", new THREE.BufferAttribute(sizes, 1))\r\n\r\n        const material = new THREE.PointsMaterial({\r\n            size: 0.1,\r\n            vertexColors: true,\r\n            transparent: true,\r\n            opacity: 0.7,\r\n            blending: THREE.AdditiveBlending,\r\n        })\r\n\r\n        const particles = new THREE.Points(geometry, material)\r\n        this.scene.add(particles)\r\n\r\n        this.effects.push({\r\n            type: \"particles\",\r\n            mesh: particles,\r\n            originalPositions: positions.slice(),\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Create energy rings around pendulums\r\n     */\r\n    createEnergyRings() {\r\n        for (let i = 0; i < 3; i++) {\r\n            const ringGeometry = new THREE.RingGeometry(0.8, 1.0, 32)\r\n            const ringMaterial = new THREE.MeshBasicMaterial({\r\n                color: [0xff4444, 0x44ff44, 0x4444ff][i],\r\n                transparent: true,\r\n                opacity: 0.3,\r\n                side: THREE.DoubleSide,\r\n            })\r\n\r\n            const ring = new THREE.Mesh(ringGeometry, ringMaterial)\r\n            ring.position.set([-2, 0, 2][i], 1, 0)\r\n            ring.rotation.x = -Math.PI / 2\r\n\r\n            this.scene.add(ring)\r\n\r\n            this.effects.push({\r\n                type: \"ring\",\r\n                mesh: ring,\r\n                originalY: ring.position.y,\r\n                phase: i * Math.PI * 0.66,\r\n            })\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Add trail system for pendulum\r\n     */\r\n    addTrail(pendulum) {\r\n        const trail = {\r\n            positions: [],\r\n            geometry: new THREE.BufferGeometry(),\r\n            material: new THREE.LineBasicMaterial({\r\n                color: pendulum.color,\r\n                transparent: true,\r\n                opacity: 0.7,\r\n                linewidth: 2,\r\n            }),\r\n            line: null,\r\n            pendulum: pendulum,\r\n            maxLength: 60,\r\n        }\r\n\r\n        const positions = new Float32Array(trail.maxLength * 3)\r\n        trail.geometry.setAttribute(\"position\", new THREE.BufferAttribute(positions, 3))\r\n        trail.geometry.setDrawRange(0, 0)\r\n\r\n        trail.line = new THREE.Line(trail.geometry, trail.material)\r\n        this.scene.add(trail.line)\r\n        this.trails.push(trail)\r\n    }\r\n\r\n    /**\r\n     * Update all effects with smooth animations\r\n     */\r\n    update(deltaTime, pendulums) {\r\n        this.time += deltaTime\r\n\r\n        // Update particles with floating motion\r\n        this.effects.forEach((effect) => {\r\n            if (effect.type === \"particles\") {\r\n                const positions = effect.mesh.geometry.attributes.position.array\r\n                for (let i = 0; i < positions.length; i += 3) {\r\n                    // Floating animation\r\n                    positions[i + 1] =\r\n                        effect.originalPositions[i + 1] +\r\n                        Math.sin(this.time * 0.5 + positions[i] * 0.1) * 0.8 +\r\n                        Math.cos(this.time * 0.3 + positions[i + 2] * 0.1) * 0.3\r\n\r\n                    // Gentle horizontal drift\r\n                    positions[i] += Math.sin(this.time * 0.2 + positions[i + 1] * 0.1) * 0.01\r\n                }\r\n                effect.mesh.geometry.attributes.position.needsUpdate = true\r\n            }\r\n\r\n            if (effect.type === \"ring\") {\r\n                // Floating rings animation\r\n                effect.mesh.position.y = effect.originalY + Math.sin(this.time * 2 + effect.phase) * 0.3\r\n                effect.mesh.rotation.z += deltaTime * 0.5\r\n\r\n                // Pulsing opacity\r\n                effect.mesh.material.opacity = 0.2 + Math.sin(this.time * 3 + effect.phase) * 0.15\r\n\r\n                // Scale pulsing\r\n                const scale = 1 + Math.sin(this.time * 4 + effect.phase) * 0.1\r\n                effect.mesh.scale.setScalar(scale)\r\n            }\r\n        })\r\n\r\n        // Update trails with fade effect\r\n        if (pendulums) {\r\n            this.trails.forEach((trail, index) => {\r\n                if (pendulums[index]) {\r\n                    const bob = pendulums[index].getBob()\r\n                    trail.positions.push(bob.position.clone())\r\n\r\n                    if (trail.positions.length > trail.maxLength) {\r\n                        trail.positions.shift()\r\n                    }\r\n\r\n                    const positions = trail.geometry.attributes.position.array\r\n                    for (let i = 0; i < trail.positions.length; i++) {\r\n                        const pos = trail.positions[i]\r\n                        positions[i * 3] = pos.x\r\n                        positions[i * 3 + 1] = pos.y\r\n                        positions[i * 3 + 2] = pos.z\r\n                    }\r\n\r\n                    trail.geometry.setDrawRange(0, trail.positions.length)\r\n                    trail.geometry.attributes.position.needsUpdate = true\r\n\r\n                    // Animate trail opacity based on pendulum energy\r\n                    const energy = pendulums[index].getEnergy()\r\n                    trail.material.opacity = 0.4 + (energy / 20) * 0.4\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Toggle trails visibility\r\n     */\r\n    toggleTrails() {\r\n        this.trails.forEach((trail) => {\r\n            trail.line.visible = !trail.line.visible\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Clear all trails\r\n     */\r\n    clearTrails() {\r\n        this.trails.forEach((trail) => {\r\n            trail.positions = []\r\n            trail.geometry.setDrawRange(0, 0)\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Create explosion effect at position\r\n     */\r\n    createExplosion(position, color = 0xffffff) {\r\n        const particleCount = 30\r\n        const geometry = new THREE.BufferGeometry()\r\n        const positions = new Float32Array(particleCount * 3)\r\n        const velocities = []\r\n\r\n        for (let i = 0; i < particleCount; i++) {\r\n            const i3 = i * 3\r\n            positions[i3] = position.x\r\n            positions[i3 + 1] = position.y\r\n            positions[i3 + 2] = position.z\r\n\r\n            velocities.push(\r\n                new THREE.Vector3((Math.random() - 0.5) * 4, (Math.random() - 0.5) * 4, (Math.random() - 0.5) * 4),\r\n            )\r\n        }\r\n\r\n        geometry.setAttribute(\"position\", new THREE.BufferAttribute(positions, 3))\r\n\r\n        const material = new THREE.PointsMaterial({\r\n            color: color,\r\n            size: 0.1,\r\n            transparent: true,\r\n            opacity: 1,\r\n            blending: THREE.AdditiveBlending,\r\n        })\r\n\r\n        const explosion = new THREE.Points(geometry, material)\r\n        this.scene.add(explosion)\r\n\r\n        // Animate explosion\r\n        let life = 1.0\r\n        const animate = () => {\r\n            life -= 0.02\r\n            if (life <= 0) {\r\n                this.scene.remove(explosion)\r\n                geometry.dispose()\r\n                material.dispose()\r\n                return\r\n            }\r\n\r\n            const positions = geometry.attributes.position.array\r\n            for (let i = 0; i < velocities.length; i++) {\r\n                const i3 = i * 3\r\n                positions[i3] += velocities[i].x * 0.02\r\n                positions[i3 + 1] += velocities[i].y * 0.02\r\n                positions[i3 + 2] += velocities[i].z * 0.02\r\n            }\r\n\r\n            geometry.attributes.position.needsUpdate = true\r\n            material.opacity = life\r\n            material.size = 0.1 * life\r\n\r\n            requestAnimationFrame(animate)\r\n        }\r\n        animate()\r\n    }\r\n\r\n    /**\r\n     * Dispose all effects\r\n     */\r\n    dispose() {\r\n        this.effects.forEach((effect) => {\r\n            this.scene.remove(effect.mesh)\r\n            effect.mesh.geometry.dispose()\r\n            effect.mesh.material.dispose()\r\n        })\r\n\r\n        this.trails.forEach((trail) => {\r\n            this.scene.remove(trail.line)\r\n            trail.geometry.dispose()\r\n            trail.material.dispose()\r\n        })\r\n    }\r\n}","/**\r\n * Utility functions for the simulation\r\n */\r\n\r\nexport function clamp(value, min, max) {\r\n    return Math.min(Math.max(value, min), max)\r\n}\r\n\r\nexport function lerp(start, end, factor) {\r\n    return start + (end - start) * factor\r\n}\r\n\r\nexport function map(value, inMin, inMax, outMin, outMax) {\r\n    return ((value - inMin) * (outMax - outMin)) / (inMax - inMin) + outMin\r\n}\r\n\r\nexport function degToRad(degrees) {\r\n    return (degrees * Math.PI) / 180\r\n}\r\n\r\nexport function radToDeg(radians) {\r\n    return (radians * 180) / Math.PI\r\n}\r\n\r\nexport function normalize(value, min, max) {\r\n    return (value - min) / (max - min)\r\n}\r\n\r\nexport function smoothstep(min, max, value) {\r\n    const x = clamp((value - min) / (max - min), 0, 1)\r\n    return x * x * (3 - 2 * x)\r\n}\r\n\r\nexport function smootherstep(min, max, value) {\r\n    const x = clamp((value - min) / (max - min), 0, 1)\r\n    return x * x * x * (x * (x * 6 - 15) + 10)\r\n}\r\n\r\nexport const easing = {\r\n    linear: (t) => t,\r\n    easeInQuad: (t) => t * t,\r\n    easeOutQuad: (t) => t * (2 - t),\r\n    easeInOutQuad: (t) => (t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t),\r\n    easeInCubic: (t) => t * t * t,\r\n    easeOutCubic: (t) => --t * t * t + 1,\r\n    easeInOutCubic: (t) => (t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1),\r\n    easeInSine: (t) => 1 - Math.cos((t * Math.PI) / 2),\r\n    easeOutSine: (t) => Math.sin((t * Math.PI) / 2),\r\n    easeInOutSine: (t) => -(Math.cos(Math.PI * t) - 1) / 2,\r\n    easeInElastic: (t) => {\r\n        const c4 = (2 * Math.PI) / 3\r\n        return t === 0 ? 0 : t === 1 ? 1 : -Math.pow(2, 10 * t - 10) * Math.sin((t * 10 - 10.75) * c4)\r\n    },\r\n    easeOutElastic: (t) => {\r\n        const c4 = (2 * Math.PI) / 3\r\n        return t === 0 ? 0 : t === 1 ? 1 : Math.pow(2, -10 * t) * Math.sin((t * 10 - 0.75) * c4) + 1\r\n    },\r\n    easeInBounce: (t) => 1 - easing.easeOutBounce(1 - t),\r\n    easeOutBounce: (t) => {\r\n        const n1 = 7.5625\r\n        const d1 = 2.75\r\n        if (t < 1 / d1) return n1 * t * t\r\n        else if (t < 2 / d1) return n1 * (t -= 1.5 / d1) * t + 0.75\r\n        else if (t < 2.5 / d1) return n1 * (t -= 2.25 / d1) * t + 0.9375\r\n        else return n1 * (t -= 2.625 / d1) * t + 0.984375\r\n    },\r\n}\r\n\r\nexport class Vector2 {\r\n    constructor(x = 0, y = 0) {\r\n        this.x = x\r\n        this.y = y\r\n    }\r\n\r\n    static distance(a, b) {\r\n        const dx = a.x - b.x\r\n        const dy = a.y - b.y\r\n        return Math.sqrt(dx * dx + dy * dy)\r\n    }\r\n\r\n    static angle(a, b) {\r\n        return Math.atan2(b.y - a.y, b.x - a.x)\r\n    }\r\n\r\n    length() {\r\n        return Math.sqrt(this.x * this.x + this.y * this.y)\r\n    }\r\n\r\n    normalize() {\r\n        const len = this.length()\r\n        if (len > 0) {\r\n            this.x /= len\r\n            this.y /= len\r\n        }\r\n        return this\r\n    }\r\n\r\n    clone() {\r\n        return new Vector2(this.x, this.y)\r\n    }\r\n}\r\n\r\nexport class Vector3 {\r\n    constructor(x = 0, y = 0, z = 0) {\r\n        this.x = x\r\n        this.y = y\r\n        this.z = z\r\n    }\r\n\r\n    static distance(a, b) {\r\n        const dx = a.x - b.x\r\n        const dy = a.y - b.y\r\n        const dz = a.z - b.z\r\n        return Math.sqrt(dx * dx + dy * dy + dz * dz)\r\n    }\r\n\r\n    length() {\r\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z)\r\n    }\r\n\r\n    normalize() {\r\n        const len = this.length()\r\n        if (len > 0) {\r\n            this.x /= len\r\n            this.y /= len\r\n            this.z /= len\r\n        }\r\n        return this\r\n    }\r\n\r\n    clone() {\r\n        return new Vector3(this.x, this.y, this.z)\r\n    }\r\n}\r\n\r\nexport function hexToRgb(hex) {\r\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\r\n    return result ?\r\n        {\r\n            r: Number.parseInt(result[1], 16),\r\n            g: Number.parseInt(result[2], 16),\r\n            b: Number.parseInt(result[3], 16),\r\n        } :\r\n        null\r\n}\r\n\r\nexport function rgbToHex(r, g, b) {\r\n    return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1)\r\n}\r\n\r\nexport function hslToRgb(h, s, l) {\r\n    h /= 360\r\n    s /= 100\r\n    l /= 100\r\n\r\n    const hue2rgb = (p, q, t) => {\r\n        if (t < 0) t += 1\r\n        if (t > 1) t -= 1\r\n        if (t < 1 / 6) return p + (q - p) * 6 * t\r\n        if (t < 1 / 2) return q\r\n        if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6\r\n        return p\r\n    }\r\n\r\n    if (s === 0) {\r\n        return { r: l * 255, g: l * 255, b: l * 255 }\r\n    }\r\n\r\n    const q = l < 0.5 ? l * (1 + s) : l + s - l * s\r\n    const p = 2 * l - q\r\n\r\n    return {\r\n        r: Math.round(hue2rgb(p, q, h + 1 / 3) * 255),\r\n        g: Math.round(hue2rgb(p, q, h) * 255),\r\n        b: Math.round(hue2rgb(p, q, h - 1 / 3) * 255),\r\n    }\r\n}\r\n\r\nexport function interpolateColor(color1, color2, factor) {\r\n    const rgb1 = hexToRgb(color1)\r\n    const rgb2 = hexToRgb(color2)\r\n\r\n    if (!rgb1 || !rgb2) return color1\r\n\r\n    const r = Math.round(lerp(rgb1.r, rgb2.r, factor))\r\n    const g = Math.round(lerp(rgb1.g, rgb2.g, factor))\r\n    const b = Math.round(lerp(rgb1.b, rgb2.b, factor))\r\n\r\n    return rgbToHex(r, g, b)\r\n}\r\n\r\nexport function getRandomColor() {\r\n    const hue = Math.random() * 360\r\n    const saturation = 70 + Math.random() * 30\r\n    const lightness = 50 + Math.random() * 30\r\n    return hslToRgb(hue, saturation, lightness)\r\n}\r\n\r\nexport function random(min = 0, max = 1) {\r\n    return Math.random() * (max - min) + min\r\n}\r\n\r\nexport function randomInt(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min\r\n}\r\n\r\nexport function randomChoice(array) {\r\n    return array[Math.floor(Math.random() * array.length)]\r\n}\r\n\r\nexport function randomGaussian(mean = 0, stdDev = 1) {\r\n    let u = 0,\r\n        v = 0\r\n    while (u === 0) u = Math.random()\r\n    while (v === 0) v = Math.random()\r\n    return mean + stdDev * Math.sqrt(-2.0 * Math.log(u)) * Math.cos(2.0 * Math.PI * v)\r\n}\r\n\r\nexport function shuffle(array) {\r\n    const shuffled = [...array]\r\n    for (let i = shuffled.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]]\r\n    }\r\n    return shuffled\r\n}\r\n\r\nexport function calculatePendulumPeriod(length, gravity = 9.81) {\r\n    return 2 * Math.PI * Math.sqrt(length / gravity)\r\n}\r\n\r\nexport function calculateWaveSpeed(frequency, wavelength) {\r\n    return frequency * wavelength\r\n}\r\n\r\nexport function dampingForce(velocity, dampingCoefficient) {\r\n    return -dampingCoefficient * velocity\r\n}\r\n\r\nexport function springForce(displacement, springConstant) {\r\n    return -springConstant * displacement\r\n}\r\n\r\nexport function gravitationalForce(mass1, mass2, distance, G = 6.674e-11) {\r\n    return (G * (mass1 * mass2)) / (distance * distance)\r\n}\r\n\r\nexport function createWaterTexture(width = 256, height = 256) {\r\n    const canvas = document.createElement(\"canvas\")\r\n    canvas.width = width\r\n    canvas.height = height\r\n    const ctx = canvas.getContext(\"2d\")\r\n\r\n    // Enhanced water gradient\r\n    const gradient = ctx.createRadialGradient(width / 2, height / 2, 0, width / 2, height / 2, width / 2)\r\n    gradient.addColorStop(0, \"#4a90e2\")\r\n    gradient.addColorStop(0.3, \"#357abd\")\r\n    gradient.addColorStop(0.7, \"#2c5aa0\")\r\n    gradient.addColorStop(1, \"#1e5f99\")\r\n\r\n    ctx.fillStyle = gradient\r\n    ctx.fillRect(0, 0, width, height)\r\n\r\n    // Add realistic water noise\r\n    for (let i = 0; i < 2000; i++) {\r\n        const x = Math.random() * width\r\n        const y = Math.random() * height\r\n        const size = Math.random() * 2 + 0.5\r\n        const opacity = Math.random() * 0.4\r\n        ctx.fillStyle = `rgba(255, 255, 255, ${opacity})`\r\n        ctx.fillRect(x, y, size, size)\r\n    }\r\n\r\n    // Add wave patterns\r\n    ctx.globalCompositeOperation = \"overlay\"\r\n    for (let i = 0; i < 5; i++) {\r\n        const gradient2 = ctx.createLinearGradient(0, (i * height) / 5, width, ((i + 1) * height) / 5)\r\n        gradient2.addColorStop(0, `rgba(255, 255, 255, ${0.1 * Math.random()})`)\r\n        gradient2.addColorStop(1, `rgba(0, 100, 200, ${0.1 * Math.random()})`)\r\n        ctx.fillStyle = gradient2\r\n        ctx.fillRect(0, (i * height) / 5, width, height / 5)\r\n    }\r\n\r\n    return canvas\r\n}\r\n\r\nexport function createNoiseTexture(width = 256, height = 256, scale = 1) {\r\n    const canvas = document.createElement(\"canvas\")\r\n    canvas.width = width\r\n    canvas.height = height\r\n    const ctx = canvas.getContext(\"2d\")\r\n    const imageData = ctx.createImageData(width, height)\r\n\r\n    for (let i = 0; i < imageData.data.length; i += 4) {\r\n        const noise = Math.random() * 255 * scale\r\n        imageData.data[i] = noise // R\r\n        imageData.data[i + 1] = noise // G\r\n        imageData.data[i + 2] = noise // B\r\n        imageData.data[i + 3] = 255 // A\r\n    }\r\n\r\n    ctx.putImageData(imageData, 0, 0)\r\n    return canvas\r\n}\r\n\r\nexport function createGradientTexture(colors, width = 256, height = 256, direction = \"horizontal\") {\r\n    const canvas = document.createElement(\"canvas\")\r\n    canvas.width = width\r\n    canvas.height = height\r\n    const ctx = canvas.getContext(\"2d\")\r\n\r\n    const gradient =\r\n        direction === \"horizontal\" ? ctx.createLinearGradient(0, 0, width, 0) : ctx.createLinearGradient(0, 0, 0, height)\r\n\r\n    colors.forEach((color, index) => {\r\n        gradient.addColorStop(index / (colors.length - 1), color)\r\n    })\r\n\r\n    ctx.fillStyle = gradient\r\n    ctx.fillRect(0, 0, width, height)\r\n    return canvas\r\n}\r\n\r\nexport function throttle(func, limit) {\r\n    let inThrottle\r\n    return function(...args) {\r\n        if (!inThrottle) {\r\n            func.apply(this, args)\r\n            inThrottle = true\r\n            setTimeout(() => (inThrottle = false), limit)\r\n        }\r\n    }\r\n}\r\n\r\nexport function memoize(fn) {\r\n    const cache = new Map()\r\n    return function(...args) {\r\n        const key = JSON.stringify(args)\r\n        if (cache.has(key)) {\r\n            return cache.get(key)\r\n        }\r\n        const result = fn.apply(this, args)\r\n        cache.set(key, result)\r\n        return result\r\n    }\r\n}\r\n\r\nexport function formatTime(seconds) {\r\n    const mins = Math.floor(seconds / 60)\r\n    const secs = Math.floor(seconds % 60)\r\n    return `${mins.toString().padStart(2, \"0\")}:${secs.toString().padStart(2, \"0\")}`\r\n}\r\n\r\nexport function getTimestamp() {\r\n    return Date.now()\r\n}\r\n\r\nexport function deltaTime(lastTime) {\r\n    const now = performance.now()\r\n    const delta = (now - lastTime) / 1000\r\n    return { delta, now }\r\n}\r\n\r\nexport function formatNumber(num, decimals = 1) {\r\n    if (typeof num !== \"number\" || isNaN(num)) return \"0.0\"\r\n    return Number(num).toFixed(decimals)\r\n}\r\n\r\nexport function formatBytes(bytes, decimals = 2) {\r\n    if (bytes === 0) return \"0 Bytes\"\r\n    const k = 1024\r\n    const dm = decimals < 0 ? 0 : decimals\r\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\"]\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k))\r\n    return Number.parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + \" \" + sizes[i]\r\n}\r\n\r\nexport function formatPercentage(value, total, decimals = 1) {\r\n    if (total === 0) return \"0%\"\r\n    return ((value / total) * 100).toFixed(decimals) + \"%\"\r\n}\r\n\r\nexport function isNumber(value) {\r\n    return typeof value === \"number\" && !isNaN(value) && isFinite(value)\r\n}\r\n\r\nexport function isInRange(value, min, max) {\r\n    return isNumber(value) && value >= min && value <= max\r\n}\r\n\r\nexport function sanitizeInput(value, min, max, defaultValue) {\r\n    const num = Number.parseFloat(value)\r\n    if (!isNumber(num)) return defaultValue\r\n    return clamp(num, min, max)\r\n}\r\n\r\nexport class AnimationManager {\r\n    constructor() {\r\n        this.animations = new Map()\r\n        this.isRunning = false\r\n    }\r\n\r\n    add(id, startValue, endValue, duration, easingFunc = easing.linear, onUpdate, onComplete) {\r\n        this.animations.set(id, {\r\n            startValue,\r\n            endValue,\r\n            duration,\r\n            easingFunc,\r\n            onUpdate,\r\n            onComplete,\r\n            startTime: performance.now(),\r\n            isComplete: false,\r\n        })\r\n\r\n        if (!this.isRunning) {\r\n            this.start()\r\n        }\r\n    }\r\n\r\n    remove(id) {\r\n        this.animations.delete(id)\r\n        if (this.animations.size === 0) {\r\n            this.stop()\r\n        }\r\n    }\r\n\r\n    start() {\r\n        this.isRunning = true\r\n        this.update()\r\n    }\r\n\r\n    stop() {\r\n        this.isRunning = false\r\n    }\r\n\r\n    update() {\r\n        if (!this.isRunning) return\r\n\r\n        const now = performance.now()\r\n\r\n        for (const [id, animation] of this.animations) {\r\n            if (animation.isComplete) continue\r\n\r\n            const elapsed = now - animation.startTime\r\n            const progress = Math.min(elapsed / animation.duration, 1)\r\n            const easedProgress = animation.easingFunc(progress)\r\n            const currentValue = lerp(animation.startValue, animation.endValue, easedProgress)\r\n\r\n            animation.onUpdate(currentValue, progress)\r\n\r\n            if (progress >= 1) {\r\n                animation.isComplete = true\r\n                if (animation.onComplete) {\r\n                    animation.onComplete()\r\n                }\r\n                this.remove(id)\r\n            }\r\n        }\r\n\r\n        if (this.isRunning) {\r\n            requestAnimationFrame(() => this.update())\r\n        }\r\n    }\r\n}\r\n\r\nexport const animationManager = new AnimationManager()\r\n\r\nexport function debounce(func, delay) {\r\n    let timeout\r\n    return function(...args) {\r\n\r\n        clearTimeout(timeout)\r\n        timeout = setTimeout(() => func.apply(this, args), delay)\r\n    }\r\n}\r\n\r\n// Backward compatibility","import { formatNumber, debounce } from \"./utils.js\"\r\n\r\n/**\r\n * Enhanced Controls Manager with smooth interactions\r\n */\r\nexport class ControlsManager {\r\n    constructor(pendulums, waveSimulation, effects) {\r\n        this.pendulums = pendulums\r\n        this.waveSimulation = waveSimulation\r\n        this.effects = effects\r\n\r\n        this.setupControls()\r\n        this.updateDisplayValues()\r\n        this.setupSpecialEffects()\r\n    }\r\n\r\n    /**\r\n     * Setup all control interactions\r\n     */\r\n    setupControls() {\r\n        // Wave controls with smooth updates\r\n        const waveControls = [\r\n            { id: \"amplitude\", param: \"amplitude\", display: \"amplitudeValue\" },\r\n            { id: \"frequency\", param: \"frequency\", display: \"frequencyValue\" },\r\n            { id: \"speed\", param: \"speed\", display: \"speedValue\" },\r\n        ]\r\n\r\n        waveControls.forEach(({ id, param, display }) => {\r\n            const slider = document.getElementById(id)\r\n            const displayElement = document.getElementById(display)\r\n\r\n            if (slider && displayElement) {\r\n                const updateWave = debounce((value) => {\r\n                    this.waveSimulation.updateParameters({\r\n                        [param]: value })\r\n                }, 16)\r\n\r\n                slider.addEventListener(\"input\", (e) => {\r\n                    const value = Number.parseFloat(e.target.value)\r\n                    displayElement.textContent = formatNumber(value)\r\n                    updateWave(value)\r\n\r\n                    // Visual feedback\r\n                    this.addSliderGlow(slider)\r\n                })\r\n            }\r\n        })\r\n\r\n        // Pendulum controls with enhanced feedback\r\n        for (let i = 1; i <= 3; i++) {\r\n            this.setupPendulumControl(i)\r\n        }\r\n\r\n        // Button controls with animations\r\n        this.setupButtons()\r\n    }\r\n\r\n    /**\r\n     * Setup individual pendulum controls\r\n     */\r\n    setupPendulumControl(index) {\r\n        const lengthSlider = document.getElementById(`length${index}`)\r\n        const massSlider = document.getElementById(`mass${index}`)\r\n        const lengthDisplay = document.getElementById(`length${index}Value`)\r\n        const massDisplay = document.getElementById(`mass${index}Value`)\r\n\r\n        if (lengthSlider && lengthDisplay) {\r\n            const updateLength = debounce((value) => {\r\n                this.pendulums[index - 1].updateProperties(value, this.pendulums[index - 1].mass)\r\n                this.createUpdateEffect(this.pendulums[index - 1])\r\n            }, 100)\r\n\r\n            lengthSlider.addEventListener(\"input\", (e) => {\r\n                const value = Number.parseFloat(e.target.value)\r\n                lengthDisplay.textContent = formatNumber(value)\r\n                updateLength(value)\r\n                this.addSliderGlow(lengthSlider)\r\n            })\r\n        }\r\n\r\n        if (massSlider && massDisplay) {\r\n            const updateMass = debounce((value) => {\r\n                this.pendulums[index - 1].updateProperties(this.pendulums[index - 1].length, value)\r\n                this.createUpdateEffect(this.pendulums[index - 1])\r\n            }, 100)\r\n\r\n            massSlider.addEventListener(\"input\", (e) => {\r\n                const value = Number.parseFloat(e.target.value)\r\n                massDisplay.textContent = formatNumber(value)\r\n                updateMass(value)\r\n                this.addSliderGlow(massSlider)\r\n            })\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Setup button controls with enhanced effects\r\n     */\r\n    setupButtons() {\r\n        const resetButton = document.getElementById(\"resetPendulums\")\r\n        if (resetButton) {\r\n            resetButton.addEventListener(\"click\", () => {\r\n                this.pendulums.forEach((pendulum, index) => {\r\n                    setTimeout(() => {\r\n                        pendulum.reset()\r\n                        this.effects.createExplosion(pendulum.getBob().position, pendulum.color)\r\n                    }, index * 200)\r\n                })\r\n                this.showFeedback(\"Pendulums reset with style!\", \"success\")\r\n            })\r\n        }\r\n\r\n        const pausePlayButton = document.getElementById(\"pausePlay\")\r\n        if (pausePlayButton) {\r\n            pausePlayButton.addEventListener(\"click\", () => {\r\n                window.simulation.togglePause()\r\n                const isPlaying = window.simulation.isPlaying\r\n                pausePlayButton.textContent = isPlaying ? \"Pause\" : \"Play\"\r\n                pausePlayButton.style.background = isPlaying ?\r\n                    \"linear-gradient(45deg, #ff6b6b, #ee5a52)\" :\r\n                    \"linear-gradient(45deg, #4caf50, #45a049)\"\r\n                this.showFeedback(isPlaying ? \"Simulation resumed\" : \"Simulation paused\")\r\n            })\r\n        }\r\n\r\n        const toggleTrailsButton = document.getElementById(\"toggleTrails\")\r\n        if (toggleTrailsButton) {\r\n            toggleTrailsButton.addEventListener(\"click\", () => {\r\n                this.effects.toggleTrails()\r\n                this.showFeedback(\"Trails toggled!\", \"info\")\r\n                this.addButtonPulse(toggleTrailsButton)\r\n            })\r\n        }\r\n\r\n        const clearTrailsButton = document.getElementById(\"clearTrails\")\r\n        if (clearTrailsButton) {\r\n            clearTrailsButton.addEventListener(\"click\", () => {\r\n                this.effects.clearTrails()\r\n                this.showFeedback(\"Trails cleared!\", \"warning\")\r\n                this.addButtonPulse(clearTrailsButton)\r\n            })\r\n        }\r\n\r\n        // New special effect buttons\r\n        const syncButton = document.getElementById(\"syncPendulums\")\r\n        if (syncButton) {\r\n            syncButton.addEventListener(\"click\", () => {\r\n                this.synchronizePendulums()\r\n                this.showFeedback(\"Pendulums synchronized!\", \"special\")\r\n            })\r\n        }\r\n\r\n        const chaosButton = document.getElementById(\"chaosPendulums\")\r\n        if (chaosButton) {\r\n            chaosButton.addEventListener(\"click\", () => {\r\n                this.createChaos()\r\n                this.showFeedback(\"Chaos mode activated!\", \"special\")\r\n            })\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Setup special effects\r\n     */\r\n    setupSpecialEffects() {\r\n        // Add sync and chaos buttons to HTML if they don't exist\r\n        const controlSection = document.querySelector(\".control-section:last-child\")\r\n        if (controlSection && !document.getElementById(\"syncPendulums\")) {\r\n            const specialButtonGroup = document.createElement(\"div\")\r\n            specialButtonGroup.className = \"button-group\"\r\n            specialButtonGroup.innerHTML = `\r\n        <button id=\"syncPendulums\" class=\"btn btn-special\">Sync</button>\r\n        <button id=\"chaosPendulums\" class=\"btn btn-special\">Chaos</button>\r\n      `\r\n            controlSection.appendChild(specialButtonGroup)\r\n\r\n            // Re-setup buttons to include new ones\r\n            this.setupButtons()\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Synchronize pendulums with animation\r\n     */\r\n    synchronizePendulums() {\r\n        const targetAngle = Math.PI / 4\r\n        this.pendulums.forEach((pendulum, index) => {\r\n            setTimeout(() => {\r\n                pendulum.angle = targetAngle\r\n                pendulum.angularVelocity = 0\r\n                this.effects.createExplosion(pendulum.getBob().position, 0x00ff00)\r\n            }, index * 300)\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Create chaos effect\r\n     */\r\n    createChaos() {\r\n        this.pendulums.forEach((pendulum) => {\r\n            pendulum.angularVelocity += (Math.random() - 0.5) * 8\r\n            this.effects.createExplosion(pendulum.getBob().position, 0xff6600)\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Create visual effect when pendulum is updated\r\n     */\r\n    createUpdateEffect(pendulum) {\r\n        const bobPosition = pendulum.getBob().position\r\n        this.effects.createExplosion(bobPosition, pendulum.color)\r\n    }\r\n\r\n    /**\r\n     * Add glow effect to sliders\r\n     */\r\n    addSliderGlow(slider) {\r\n        slider.style.boxShadow = \"0 0 10px rgba(79, 195, 247, 0.5)\"\r\n        setTimeout(() => {\r\n            slider.style.boxShadow = \"\"\r\n        }, 300)\r\n    }\r\n\r\n    /**\r\n     * Add pulse effect to buttons\r\n     */\r\n    addButtonPulse(button) {\r\n        button.style.transform = \"scale(1.1)\"\r\n        setTimeout(() => {\r\n            button.style.transform = \"\"\r\n        }, 200)\r\n    }\r\n\r\n    /**\r\n     * Update display values\r\n     */\r\n    updateDisplayValues() {\r\n        const waveParams = this.waveSimulation.getParameters()\r\n\r\n        const waveDisplays = [\r\n            { param: \"amplitude\", id: \"amplitudeValue\" },\r\n            { param: \"frequency\", id: \"frequencyValue\" },\r\n            { param: \"speed\", id: \"speedValue\" },\r\n        ]\r\n\r\n        waveDisplays.forEach(({ param, id }) => {\r\n            const element = document.getElementById(id)\r\n            if (element) {\r\n                element.textContent = formatNumber(waveParams[param])\r\n            }\r\n        })\r\n\r\n        this.pendulums.forEach((pendulum, index) => {\r\n            const i = index + 1\r\n            const lengthElement = document.getElementById(`length${i}Value`)\r\n            const massElement = document.getElementById(`mass${i}Value`)\r\n\r\n            if (lengthElement) lengthElement.textContent = formatNumber(pendulum.length)\r\n            if (massElement) massElement.textContent = formatNumber(pendulum.mass)\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Enhanced feedback system\r\n     */\r\n    showFeedback(message, type = \"info\") {\r\n        const feedback = document.createElement(\"div\")\r\n        feedback.textContent = message\r\n\r\n        const colors = {\r\n            info: \"rgba(33, 150, 243, 0.9)\",\r\n            success: \"rgba(76, 175, 80, 0.9)\",\r\n            warning: \"rgba(255, 152, 0, 0.9)\",\r\n            special: \"rgba(156, 39, 176, 0.9)\",\r\n        }\r\n\r\n        feedback.style.cssText = `\r\n      position: fixed;\r\n      top: 50%;\r\n      left: 50%;\r\n      transform: translate(-50%, -50%);\r\n      background: ${colors[type] || colors.info};\r\n      color: white;\r\n      padding: 15px 25px;\r\n      border-radius: 8px;\r\n      z-index: 1000;\r\n      font-size: 16px;\r\n      font-weight: 500;\r\n      pointer-events: none;\r\n      opacity: 0;\r\n      transition: all 0.3s ease;\r\n      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);\r\n    `\r\n\r\n        document.body.appendChild(feedback)\r\n\r\n        requestAnimationFrame(() => {\r\n            feedback.style.opacity = \"1\"\r\n            feedback.style.transform = \"translate(-50%, -50%) scale(1.05)\"\r\n        })\r\n\r\n        setTimeout(() => {\r\n            feedback.style.opacity = \"0\"\r\n            feedback.style.transform = \"translate(-50%, -50%) scale(0.95)\"\r\n            setTimeout(() => feedback.remove(), 300)\r\n        }, 2500)\r\n    }\r\n}","import * as THREE from \"three\"\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls.js\"\r\nimport { Pendulum } from \"./pendulum.js\"\r\nimport { WaveSimulation } from \"./wave.js\"\r\nimport { EffectsSystem } from \"./effect.js\"\r\nimport { ControlsManager } from \"./controls.js\"\r\n\r\n/**\r\n * Enhanced Pendulum Wave Simulation\r\n */\r\nclass PendulumWaveSimulation {\r\n    constructor() {\r\n        // Core components\r\n        this.scene = null\r\n        this.camera = null\r\n        this.renderer = null\r\n        this.controls = null\r\n        this.clock = new THREE.Clock()\r\n\r\n        // Simulation objects\r\n        this.pendulums = []\r\n        this.waveSimulation = null\r\n        this.effects = null\r\n        this.controlsManager = null\r\n\r\n        // Interaction state\r\n        this.isPlaying = true\r\n        this.isDragging = false\r\n        this.draggedPendulum = null\r\n        this.mouse = new THREE.Vector2()\r\n        this.raycaster = new THREE.Raycaster()\r\n\r\n        this.animationId = null\r\n\r\n        this.init()\r\n    }\r\n\r\n    /**\r\n     * Initialize the simulation\r\n     */\r\n    async init() {\r\n        try {\r\n            this.createScene()\r\n            this.createCamera()\r\n            this.createRenderer()\r\n            this.createControls()\r\n            this.setupLighting()\r\n            this.createPendulums()\r\n            this.createWave()\r\n            this.createEffects()\r\n            this.setupEventListeners()\r\n            this.setupControls()\r\n\r\n            this.hideLoadingScreen()\r\n            this.animate()\r\n\r\n            console.log(\"Enhanced Pendulum Wave Simulation initialized successfully!\")\r\n        } catch (error) {\r\n            console.error(\"Failed to initialize simulation:\", error)\r\n            this.showError(\"Failed to load simulation. Please refresh the page.\")\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create the scene with enhanced background\r\n     */\r\n    createScene() {\r\n        this.scene = new THREE.Scene()\r\n\r\n        // Create gradient background\r\n        const canvas = document.createElement(\"canvas\")\r\n        canvas.width = 512\r\n        canvas.height = 512\r\n        const ctx = canvas.getContext(\"2d\")\r\n\r\n        const gradient = ctx.createLinearGradient(0, 0, 0, 512)\r\n        gradient.addColorStop(0, \"#1a1a2e\")\r\n        gradient.addColorStop(0.5, \"#16213e\")\r\n        gradient.addColorStop(1, \"#0f3460\")\r\n\r\n        ctx.fillStyle = gradient\r\n        ctx.fillRect(0, 0, 512, 512)\r\n\r\n        const texture = new THREE.CanvasTexture(canvas)\r\n        this.scene.background = texture\r\n        this.scene.fog = new THREE.Fog(0x1a1a2e, 15, 50)\r\n    }\r\n\r\n    /**\r\n     * Create camera with better positioning\r\n     */\r\n    createCamera() {\r\n        this.camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000)\r\n        this.camera.position.set(0, 3, 10)\r\n        this.camera.lookAt(0, 2, 0)\r\n    }\r\n\r\n    /**\r\n     * Create renderer with enhanced settings\r\n     */\r\n    createRenderer() {\r\n        this.renderer = new THREE.WebGLRenderer({\r\n            antialias: true,\r\n            alpha: true,\r\n            powerPreference: \"high-performance\",\r\n        })\r\n        this.renderer.setSize(window.innerWidth, window.innerHeight)\r\n        this.renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2))\r\n        this.renderer.shadowMap.enabled = true\r\n        this.renderer.shadowMap.type = THREE.PCFSoftShadowMap\r\n        this.renderer.outputColorSpace = THREE.SRGBColorSpace\r\n        this.renderer.toneMapping = THREE.ACESFilmicToneMapping\r\n        this.renderer.toneMappingExposure = 1.2\r\n\r\n        const container = document.getElementById(\"canvas-container\")\r\n        if (container) {\r\n            container.appendChild(this.renderer.domElement)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create enhanced camera controls\r\n     */\r\n    createControls() {\r\n        this.controls = new OrbitControls(this.camera, this.renderer.domElement)\r\n        this.controls.enableDamping = true\r\n        this.controls.dampingFactor = 0.05\r\n        this.controls.screenSpacePanning = false\r\n        this.controls.minDistance = 4\r\n        this.controls.maxDistance = 20\r\n        this.controls.maxPolarAngle = Math.PI / 1.8\r\n        this.controls.autoRotate = false\r\n        this.controls.autoRotateSpeed = 0.5\r\n    }\r\n\r\n    /**\r\n     * Setup enhanced lighting system\r\n     */\r\n    setupLighting() {\r\n        // Ambient light\r\n        const ambientLight = new THREE.AmbientLight(0x404040, 0.3)\r\n        this.scene.add(ambientLight)\r\n\r\n        // Main directional light with better shadows\r\n        const directionalLight = new THREE.DirectionalLight(0xffffff, 1.0)\r\n        directionalLight.position.set(8, 12, 5)\r\n        directionalLight.castShadow = true\r\n        directionalLight.shadow.mapSize.width = 2048\r\n        directionalLight.shadow.mapSize.height = 2048\r\n        directionalLight.shadow.camera.near = 0.5\r\n        directionalLight.shadow.camera.far = 50\r\n        directionalLight.shadow.camera.left = -10\r\n        directionalLight.shadow.camera.right = 10\r\n        directionalLight.shadow.camera.top = 10\r\n        directionalLight.shadow.camera.bottom = -10\r\n        directionalLight.shadow.bias = -0.0001\r\n        this.scene.add(directionalLight)\r\n\r\n        // Colored point lights for atmosphere\r\n        const pointLight1 = new THREE.PointLight(0x4fc3f7, 0.8, 25)\r\n        pointLight1.position.set(-5, 8, 3)\r\n        this.scene.add(pointLight1)\r\n\r\n        const pointLight2 = new THREE.PointLight(0xff6b6b, 0.6, 20)\r\n        pointLight2.position.set(5, 6, -2)\r\n        this.scene.add(pointLight2)\r\n\r\n        // Spot light for wave surface\r\n        const spotLight = new THREE.SpotLight(0x00ffff, 0.7, 30, Math.PI / 8)\r\n        spotLight.position.set(-5, 10, 0)\r\n        spotLight.target.position.set(-5, -2, 0)\r\n        spotLight.castShadow = true\r\n        this.scene.add(spotLight)\r\n        this.scene.add(spotLight.target)\r\n    }\r\n\r\n    /**\r\n     * Create pendulums with enhanced configurations\r\n     */\r\n    createPendulums() {\r\n        const configs = [\r\n            { x: -2.5, y: 4, z: 0, length: 3, mass: 1, color: 0xff4444 },\r\n            { x: 0, y: 4, z: 0, length: 2.5, mass: 1.5, color: 0x44ff44 },\r\n            { x: 2.5, y: 4, z: 0, length: 2, mass: 2, color: 0x4444ff },\r\n        ]\r\n\r\n        configs.forEach((config) => {\r\n            const pendulum = new Pendulum(this.scene, config)\r\n            this.pendulums.push(pendulum)\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Create enhanced wave simulation\r\n     */\r\n    createWave() {\r\n        this.waveSimulation = new WaveSimulation(this.scene, {\r\n            width: 12,\r\n            height: 8,\r\n            segments: 40,\r\n            position: { x: -6, y: -2, z: 0 },\r\n            amplitude: 0.5,\r\n            frequency: 1.0,\r\n            speed: 1.0,\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Create effects system\r\n     */\r\n    createEffects() {\r\n        this.effects = new EffectsSystem(this.scene)\r\n        this.pendulums.forEach((pendulum) => {\r\n            this.effects.addTrail(pendulum)\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Setup event listeners\r\n     */\r\n    setupEventListeners() {\r\n        // Mouse events\r\n        this.renderer.domElement.addEventListener(\"mousedown\", this.onMouseDown.bind(this))\r\n        this.renderer.domElement.addEventListener(\"mousemove\", this.onMouseMove.bind(this))\r\n        this.renderer.domElement.addEventListener(\"mouseup\", this.onMouseUp.bind(this))\r\n\r\n        // Touch events for mobile\r\n        this.renderer.domElement.addEventListener(\"touchstart\", this.onTouchStart.bind(this))\r\n        this.renderer.domElement.addEventListener(\"touchmove\", this.onTouchMove.bind(this))\r\n        this.renderer.domElement.addEventListener(\"touchend\", this.onTouchEnd.bind(this))\r\n\r\n        // Window events\r\n        window.addEventListener(\"resize\", this.onWindowResize.bind(this))\r\n        window.addEventListener(\"keydown\", this.onKeyDown.bind(this))\r\n\r\n        // Prevent context menu\r\n        this.renderer.domElement.addEventListener(\"contextmenu\", (e) => e.preventDefault())\r\n    }\r\n\r\n    /**\r\n     * Setup controls manager\r\n     */\r\n    setupControls() {\r\n        this.controlsManager = new ControlsManager(this.pendulums, this.waveSimulation, this.effects)\r\n    }\r\n\r\n    /**\r\n     * Mouse interaction handlers\r\n     */\r\n    onMouseDown(event) {\r\n        this.updateMousePosition(event.clientX, event.clientY)\r\n        this.checkPendulumInteraction()\r\n    }\r\n\r\n    onMouseMove(event) {\r\n        if (this.isDragging && this.draggedPendulum) {\r\n            this.updateMousePosition(event.clientX, event.clientY)\r\n            this.updateDraggedPendulum()\r\n        }\r\n    }\r\n\r\n    onMouseUp() {\r\n        if (this.isDragging && this.draggedPendulum) {\r\n            // Create release effect\r\n            this.effects.createExplosion(this.draggedPendulum.getBob().position, this.draggedPendulum.color)\r\n        }\r\n        this.isDragging = false\r\n        this.draggedPendulum = null\r\n        this.controls.enabled = true\r\n    }\r\n\r\n    /**\r\n     * Touch event handlers\r\n     */\r\n    onTouchStart(event) {\r\n        if (event.touches.length === 1) {\r\n            const touch = event.touches[0]\r\n            this.updateMousePosition(touch.clientX, touch.clientY)\r\n            this.checkPendulumInteraction()\r\n        }\r\n    }\r\n\r\n    onTouchMove(event) {\r\n        if (event.touches.length === 1 && this.isDragging && this.draggedPendulum) {\r\n            event.preventDefault()\r\n            const touch = event.touches[0]\r\n            this.updateMousePosition(touch.clientX, touch.clientY)\r\n            this.updateDraggedPendulum()\r\n        }\r\n    }\r\n\r\n    onTouchEnd() {\r\n        this.onMouseUp()\r\n    }\r\n\r\n    /**\r\n     * Update mouse position for raycasting\r\n     */\r\n    updateMousePosition(clientX, clientY) {\r\n        this.mouse.x = (clientX / window.innerWidth) * 2 - 1\r\n        this.mouse.y = -(clientY / window.innerHeight) * 2 + 1\r\n    }\r\n\r\n    /**\r\n     * Check for pendulum interaction\r\n     */\r\n    checkPendulumInteraction() {\r\n        this.raycaster.setFromCamera(this.mouse, this.camera)\r\n        const bobs = this.pendulums.map((p) => p.getBob())\r\n        const intersects = this.raycaster.intersectObjects(bobs)\r\n\r\n        if (intersects.length > 0) {\r\n            this.isDragging = true\r\n            this.draggedPendulum = intersects[0].object.userData.pendulum\r\n            this.controls.enabled = false\r\n\r\n            // Visual feedback for grab\r\n            this.effects.createExplosion(this.draggedPendulum.getBob().position, 0xffffff)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Update dragged pendulum position\r\n     */\r\n    updateDraggedPendulum() {\r\n        this.raycaster.setFromCamera(this.mouse, this.camera)\r\n        const distance = this.camera.position.distanceTo(\r\n            new THREE.Vector3(this.draggedPendulum.pivotX, this.draggedPendulum.pivotY, this.draggedPendulum.pivotZ),\r\n        )\r\n\r\n        const worldPosition = new THREE.Vector3()\r\n        worldPosition.copy(this.raycaster.ray.direction)\r\n        worldPosition.multiplyScalar(distance)\r\n        worldPosition.add(this.raycaster.ray.origin)\r\n\r\n        this.draggedPendulum.setAngleFromPosition(worldPosition)\r\n    }\r\n\r\n    /**\r\n     * Handle window resize\r\n     */\r\n    onWindowResize() {\r\n        this.camera.aspect = window.innerWidth / window.innerHeight\r\n        this.camera.updateProjectionMatrix()\r\n        this.renderer.setSize(window.innerWidth, window.innerHeight)\r\n    }\r\n\r\n    /**\r\n     * Handle keyboard shortcuts\r\n     */\r\n    onKeyDown(event) {\r\n        switch (event.code) {\r\n            case \"Space\":\r\n                event.preventDefault()\r\n                this.togglePause()\r\n                break\r\n            case \"KeyR\":\r\n                event.preventDefault()\r\n                this.pendulums.forEach((p, i) => {\r\n                    setTimeout(() => p.reset(), i * 200)\r\n                })\r\n                break\r\n            case \"KeyT\":\r\n                event.preventDefault()\r\n                this.effects.toggleTrails()\r\n                break\r\n            case \"KeyC\":\r\n                event.preventDefault()\r\n                this.effects.clearTrails()\r\n                break\r\n            case \"KeyA\":\r\n                event.preventDefault()\r\n                this.controls.autoRotate = !this.controls.autoRotate\r\n                break\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Toggle pause with smooth transition\r\n     */\r\n    togglePause() {\r\n        this.isPlaying = !this.isPlaying\r\n        const button = document.getElementById(\"pausePlay\")\r\n        if (button) {\r\n            button.textContent = this.isPlaying ? \"Pause\" : \"Play\"\r\n            button.style.background = this.isPlaying ?\r\n                \"linear-gradient(45deg, #ff6b6b, #ee5a52)\" :\r\n                \"linear-gradient(45deg, #4caf50, #45a049)\"\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Hide loading screen with animation\r\n     */\r\n    hideLoadingScreen() {\r\n        const loading = document.getElementById(\"loading\")\r\n        if (loading) {\r\n            loading.style.opacity = \"0\"\r\n            loading.style.transform = \"scale(0.9)\"\r\n            setTimeout(() => (loading.style.display = \"none\"), 500)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Show error message\r\n     */\r\n    showError(message) {\r\n        const loading = document.getElementById(\"loading\")\r\n        if (loading) {\r\n            loading.innerHTML = `\r\n        <div style=\"color: #ff6b6b; text-align: center;\">\r\n          <h3>⚠️ Error</h3>\r\n          <p>${message}</p>\r\n          <button onclick=\"location.reload()\" style=\"\r\n            background: linear-gradient(45deg, #4fc3f7, #29b6f6);\r\n            color: white;\r\n            border: none;\r\n            padding: 12px 24px;\r\n            border-radius: 6px;\r\n            cursor: pointer;\r\n            margin-top: 20px;\r\n            font-size: 16px;\r\n            transition: transform 0.2s ease;\r\n          \" onmouseover=\"this.style.transform='scale(1.05)'\" \r\n             onmouseout=\"this.style.transform='scale(1)'\">\r\n            🔄 Reload Page\r\n          </button>\r\n        </div>\r\n      `\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Main animation loop with enhanced performance\r\n     */\r\n    animate() {\r\n        this.animationId = requestAnimationFrame(this.animate.bind(this))\r\n\r\n        if (this.isPlaying) {\r\n            const deltaTime = Math.min(this.clock.getDelta(), 0.02) // Cap delta time\r\n\r\n            // Update pendulums\r\n            this.pendulums.forEach((pendulum) => {\r\n                if (!this.isDragging || this.draggedPendulum !== pendulum) {\r\n                    pendulum.update(deltaTime)\r\n                }\r\n            })\r\n\r\n            // Update wave simulation\r\n            this.waveSimulation.update(deltaTime)\r\n\r\n            // Update effects\r\n            this.effects.update(deltaTime, this.pendulums)\r\n        }\r\n\r\n        // Always update controls for smooth camera movement\r\n        this.controls.update()\r\n\r\n        // Render scene\r\n        this.renderer.render(this.scene, this.camera)\r\n    }\r\n\r\n    /**\r\n     * Dispose of all resources\r\n     */\r\n    dispose() {\r\n        if (this.animationId) cancelAnimationFrame(this.animationId)\r\n\r\n        this.pendulums.forEach((p) => p.dispose())\r\n        this.waveSimulation.dispose()\r\n        this.effects.dispose()\r\n        this.renderer.dispose()\r\n\r\n        // Remove event listeners\r\n        window.removeEventListener(\"resize\", this.onWindowResize)\r\n        window.removeEventListener(\"keydown\", this.onKeyDown)\r\n\r\n        console.log(\"Simulation disposed successfully\")\r\n    }\r\n}\r\n\r\n// Initialize simulation when DOM is loaded\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n    window.simulation = new PendulumWaveSimulation()\r\n})\r\n\r\n// Handle page unload\r\nwindow.addEventListener(\"beforeunload\", () => {\r\n    if (window.simulation) {\r\n        window.simulation.dispose()\r\n    }\r\n})"],"names":["_changeEvent","_startEvent","_endEvent","_ray","Ray","_plane","Plane","_TILT_LIMIT","MathUtils","_v","Vector3","_twoPI","_STATE","_EPS","OrbitControls","Controls","object","domElement","MOUSE","TOUCH","Quaternion","Spherical","Vector2","onPointerMove","onPointerDown","onPointerUp","onContextMenu","onMouseWheel","onKeyDown","onTouchStart","onTouchMove","onMouseDown","onMouseMove","interceptControlDown","interceptControlUp","deltaTime","position","min","max","zoomChanged","prevRadius","newRadius","radiusDelta","mouseBefore","prevZoom","mouseAfter","delta","normalizedDelta","angle","distance","objectMatrix","deltaX","deltaY","element","targetDistance","dollyScale","x","y","rect","dx","dy","w","h","dist","event","needsUpdate","centerX","centerY","i","pointerId","mode","newEvent","mouseAction","Pendulum","scene","config","THREE.Group","pivotGeometry","THREE.SphereGeometry","pivotMaterial","THREE.MeshPhongMaterial","THREE.Mesh","rodGeometry","THREE.CylinderGeometry","rodMaterial","bobRadius","bobGeometry","bobMaterial","THREE.Color","glowGeometry","glowMaterial","THREE.MeshBasicMaterial","THREE.AdditiveBlending","bobX","bobY","angularAcceleration","velocity","emissiveIntensity","pulseScale","worldPosition","length","mass","height","child","WaveSimulation","THREE.PlaneGeometry","positions","phase","index","waveX","waveY","waveXY","hue1","hue2","finalHue","newParams","EffectsSystem","geometry","THREE.BufferGeometry","colors","sizes","i3","hue","color","THREE.BufferAttribute","material","THREE.PointsMaterial","particles","THREE.Points","ringGeometry","THREE.RingGeometry","ringMaterial","THREE.DoubleSide","ring","pendulum","trail","THREE.LineBasicMaterial","THREE.Line","pendulums","effect","scale","bob","pos","energy","velocities","THREE.Vector3","explosion","life","animate","formatNumber","num","decimals","debounce","func","delay","timeout","args","ControlsManager","waveSimulation","effects","id","param","display","slider","displayElement","updateWave","value","e","lengthSlider","massSlider","lengthDisplay","massDisplay","updateLength","updateMass","resetButton","pausePlayButton","isPlaying","toggleTrailsButton","clearTrailsButton","syncButton","chaosButton","controlSection","specialButtonGroup","targetAngle","bobPosition","button","waveParams","lengthElement","massElement","message","type","feedback","PendulumWaveSimulation","THREE.Clock","THREE.Vector2","THREE.Raycaster","error","THREE.Scene","canvas","ctx","gradient","texture","THREE.CanvasTexture","THREE.Fog","THREE.PerspectiveCamera","THREE.WebGLRenderer","THREE.PCFSoftShadowMap","THREE.SRGBColorSpace","THREE.ACESFilmicToneMapping","container","ambientLight","THREE.AmbientLight","directionalLight","THREE.DirectionalLight","pointLight1","THREE.PointLight","pointLight2","spotLight","THREE.SpotLight","touch","clientX","clientY","bobs","p","intersects","loading"],"mappings":"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","x_google_ignoreList":[0]}